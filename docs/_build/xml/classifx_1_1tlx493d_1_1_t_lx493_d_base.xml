<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classifx_1_1tlx493d_1_1_t_lx493_d_base" kind="class" language="C++" prot="public">
    <compoundname>ifx::tlx493d::TLx493DBase</compoundname>
    <derivedcompoundref refid="classifx_1_1tlx493d_1_1_t_lx493_d" prot="public" virt="non-virtual">ifx::tlx493d::TLx493D&lt; BoardSupportClass, BusWrapper, sensorType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classifx_1_1tlx493d_1_1_t_lx493_d_3_01_board_support_00_01_s_p_i_class_wrapper_00_01sensor_type_01_4" prot="public" virt="non-virtual">ifx::tlx493d::TLx493D&lt; BoardSupport, SPIClassWrapper, sensorType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classifx_1_1tlx493d_1_1_t_lx493_d_3_01_board_support_00_01_two_wire_wrapper_00_01sensor_type_01_4" prot="public" virt="non-virtual">ifx::tlx493d::TLx493D&lt; BoardSupport, TwoWireWrapper, sensorType &gt;</derivedcompoundref>
    <includes refid="_t_lx493_d_base_8hpp" local="no">TLx493DBase.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a0459a98ac5163dbccd71e87ad6ed869b" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref></type>
        <definition>TLx493D_t ifx::tlx493d::TLx493DBase::sensor</definition>
        <argsstring></argsstring>
        <name>sensor</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::sensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declaration of the sensor object structure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="560" column="28" bodyfile="src/TLx493DBase.hpp" bodystart="560" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a24f4d862b63590f82e1f8020bc2161ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ifx::tlx493d::TLx493DBase::~TLx493DBase</definition>
        <argsstring>()</argsstring>
        <name>~TLx493DBase</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::~TLx493DBase</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>~TLx493DBase</computeroutput> is the destructor of the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d_base" kindref="compound">TLx493DBase</ref> class object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="33" column="17" bodyfile="src/TLx493DBase.hpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a5b7ef6a538441e34214266588c7da24f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::readRegisters</definition>
        <argsstring>()</argsstring>
        <name>readRegisters</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::readRegisters</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>readRegisters</computeroutput> reads registers from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is reading out the complete register map of the sensor and is saving the current values to the &quot;internal&quot; register map of the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>readRegisters</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="45" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ad6fc56fe8e622358b899914a509b618d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::getRawTemperature</definition>
        <argsstring>(int16_t *temperature)</argsstring>
        <name>getRawTemperature</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getRawTemperature</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>getRawTemperature</computeroutput> retrieves the raw temperature from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is reading out the temperature registers of the sensor and is returning its value as LSB. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int16_t variable where the raw temperature value will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getRawTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="59" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aca40ab62e823a3a023152950acca3616" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::getRawMagneticField</definition>
        <argsstring>(int16_t *x, int16_t *y, int16_t *z)</argsstring>
        <name>getRawMagneticField</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getRawMagneticField</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>getRawMagneticField</computeroutput> retrieves the raw magnetic field values from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is reading the magnetic field value registers of the sensor and is returning them as LSB for the X, Y, Z-direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the z-axis will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>getRawMagneticField</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="76" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1af6625e220da1e6778e2683a6c86a443a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::getRawMagneticFieldAndTemperature</definition>
        <argsstring>(int16_t *x, int16_t *y, int16_t *z, int16_t *temp)</argsstring>
        <name>getRawMagneticFieldAndTemperature</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getRawMagneticFieldAndTemperature</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>getRawMagneticFieldAndTemperature</computeroutput> retrieves the raw magnetic field and temperature values from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is reading out the magnetic field value registers, as well as the temperature value registers of the sensor and is returning them as LSB. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the z-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">temp</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw temperature value will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>getRawMagneticFieldAndTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="94" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a50a2b733e072eaf7a33f6f210a45eda8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::getTemperature</definition>
        <argsstring>(double *temperature)</argsstring>
        <name>getTemperature</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getTemperature</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>getTemperature</computeroutput> retrieves the temperature from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor in °C. It is reading out the temperature registers of the sensor and converts the values into °C with the formula that is provided in the datasheet of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a double variable where the temperature value will be stored in °C.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>getTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="109" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a94dd25babad646f77c23b6bea6cefbea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::getMagneticField</definition>
        <argsstring>(double *x, double *y, double *z)</argsstring>
        <name>getMagneticField</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getMagneticField</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>getMagneticField</computeroutput> retrieves the magnetic field values from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is reading out the magnetic field value registers of the sensor and is converting the retrieved data into values in mT for each magnetic field axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the z-axis will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>getMagneticField</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="126" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a83b11b5501c4f5a56b14b0e22df4ccbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::getMagneticFieldAndTemperature</definition>
        <argsstring>(double *x, double *y, double *z, double *temp)</argsstring>
        <name>getMagneticFieldAndTemperature</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getMagneticFieldAndTemperature</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref> *</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>getMagneticFieldAndTemperature</computeroutput> retrieves the magnetic field and temperature readings from a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It combines the two functions <computeroutput>getMagneticFieldAndTemperature</computeroutput> and <computeroutput>tlx493d_getMagneticField</computeroutput> in order to have one function which is providing the temperature as well as the magnetic field values of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the z-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">temp</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a double variable where the temperature value in °C will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>getMagneticFieldAndTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="145" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a25cede7adea18d8102dff6a042ac8eaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setMeasurement</definition>
        <argsstring>(TLx493D_MeasurementType_t meas)</argsstring>
        <name>setMeasurement</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setMeasurement</qualifiedname>
        <param>
          <type>TLx493D_MeasurementType_t</type>
          <declname>meas</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setMeasurement</computeroutput> sets the measurement type for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is writing to the corresponding bitfields in the config-register in order to set the desired measuring mode of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>meas</computeroutput> parameter is of type <computeroutput>TLx493D_MeasurementType_t</computeroutput>, which is an enumeration type representing different measurement types for the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. All available options can be found in the enum <computeroutput>TLx493D_MeasurementType_t</computeroutput> in the library file <computeroutput><ref refid="tlx493d__types_8h_source" kindref="compound">tlx493d_types.h</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setMeasurement</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="164" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a7872446202dcb1e07f764df2f0db15db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setTrigger</definition>
        <argsstring>(TLx493D_TriggerType_t bits)</argsstring>
        <name>setTrigger</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setTrigger</qualifiedname>
        <param>
          <type>TLx493D_TriggerType_t</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setTrigger</computeroutput> sets the trigger type for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is writing to the corresponding bitfields in the config-register in order to set the desired trigger mode of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>bits</computeroutput> parameter is of type <computeroutput>TLx493D_TriggerType_t</computeroutput>, which is an enumeration type representing different trigger types for the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. All the available options can be found in the enum <computeroutput>TLx493D_TriggerType_t</computeroutput> in the library file <computeroutput>tlx493d_types</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setTrigger</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="181" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a1486af09f7f556b5cbee7084f6164991" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setSensitivity</definition>
        <argsstring>(TLx493D_SensitivityType_t range)</argsstring>
        <name>setSensitivity</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setSensitivity</qualifiedname>
        <param>
          <type>TLx493D_SensitivityType_t</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setSensitivity</computeroutput> sets the sensitivity of a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is writing to the corresponding bitfields in the registers of the sensor in order to set the desired measuring range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">range</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>range</computeroutput> parameter is of type <computeroutput>TLx493D_SensitivityType_t</computeroutput>, which is an enumeration type that represents the sensitivity range of the sensor. All available options can be found in the enum <computeroutput>TLx493D_SensitivityType_t</computeroutput> in the library file <computeroutput>tlx493d_types</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setSensitivity</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="198" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a4819dbb661044e3abbee2cb7361d8495" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setDefaultConfig</definition>
        <argsstring>()</argsstring>
        <name>setDefaultConfig</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setDefaultConfig</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>setDefaultConfig</computeroutput> sets the default configuration for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It puts the sensor into the 1-Byte-Read-Mode and turns off the interrupt. This is required to guarantee the proper functionality of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>setDefaultConfig</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="213" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a82aa43dd9b6481f5257f7ef068aadd39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setIICAddress</definition>
        <argsstring>(TLx493D_IICAddressType_t addr)</argsstring>
        <name>setIICAddress</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setIICAddress</qualifiedname>
        <param>
          <type>TLx493D_IICAddressType_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setIICAddress</computeroutput> sets the IIC address of a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is writing to the corresponding bitfields of the sensor in order to change the I2C-Default-Address of the sensor to the desired address of the user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>addr</computeroutput> parameter is of type <computeroutput>TLx493D_IICAddressType_t</computeroutput> , which is an enumeration type representing the I2C address of the sensor. You can see all available addresses in the enum <computeroutput>TLx493D_IICAddressType_t</computeroutput> in the library file <computeroutput><ref refid="tlx493d__types_8h_source" kindref="compound">tlx493d_types.h</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setIICAddress</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="230" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a8ed387fc20229e511a3b28f014ba9124" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::enableCollisionAvoidance</definition>
        <argsstring>()</argsstring>
        <name>enableCollisionAvoidance</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::enableCollisionAvoidance</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>enableCollisionAvoidance</computeroutput> enables collision avoidance for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>enableCollisionAvoidance</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="241" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ad202988c2ec6e4b2933cf39cc3181307" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::disableCollisionAvoidance</definition>
        <argsstring>()</argsstring>
        <name>disableCollisionAvoidance</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::disableCollisionAvoidance</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>disableCollisionAvoidance</computeroutput> disables collision avoidance for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>disableCollisionAvoidance</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="252" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a94ad0d2de8c157093f0147bc962a3838" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::enableInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableInterrupt</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::enableInterrupt</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>enableInterrupt</computeroutput> enables interrupts for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>enableInterrupt</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="263" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a2c52a80fe7a1330efb88df7ba609688d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::disableInterrupt</definition>
        <argsstring>()</argsstring>
        <name>disableInterrupt</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::disableInterrupt</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>disableInterrupt</computeroutput> is used to disable interrupts for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>disableInterrupt</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="274" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a897dd0914d7755d101d0cb998b11adfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setPowerMode</definition>
        <argsstring>(TLx493D_PowerModeType_t mode)</argsstring>
        <name>setPowerMode</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setPowerMode</qualifiedname>
        <param>
          <type>TLx493D_PowerModeType_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setPowerMode</computeroutput> sets the power mode of a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is writing to the corresponding bitfields of the sensor in order to set one of the three available power modes of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>mode</computeroutput> parameter is of type <computeroutput>TLx493D_PowerModeType_t</computeroutput>, which is an enumeration type representing different power modes for the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. All available options can be found in the enum <computeroutput>TLx493D_PowerModeType_t</computeroutput> in the library file <computeroutput><ref refid="tlx493d__types_8h_source" kindref="compound">tlx493d_types.h</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setPowerMode</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="291" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a30bfd717a0eb8163fb47ccfe4b1b60c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setUpdateRate</definition>
        <argsstring>(TLx493D_UpdateRateType_t bit)</argsstring>
        <name>setUpdateRate</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setUpdateRate</qualifiedname>
        <param>
          <type>TLx493D_UpdateRateType_t</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setUpdateRate</computeroutput> sets the update rate of a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It is writing to the corresponding bitfields of the sensor in order to set the desired update frequency, with which the sensor will update his measured values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bit</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>bit</computeroutput> parameter is of type <computeroutput>TLx493D_UpdateRateType_t</computeroutput>, which is an enumeration type representing different update rates for the sensor. All available options can be found in the enum <computeroutput>TLx493D_UpdateRateType_t</computeroutput> in the library file ´tlx493d_types.h`.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setUpdateRate</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="308" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a69b1048a8dcd2b27b5acc4b29c5278ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::hasValidData</definition>
        <argsstring>()</argsstring>
        <name>hasValidData</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::hasValidData</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>hasValidData</computeroutput> checks if the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor has valid data. It is checking the corresponding bitfield of the sensor which indicates if the acquired measurement data is valid or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>hasValidData</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="323" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a8a53e83a0c2c39bd5191270e899ccfac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::isFunctional</definition>
        <argsstring>()</argsstring>
        <name>isFunctional</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::isFunctional</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>isFunctional</computeroutput> checks if a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor is functional. It checks the internal fuse parity bit as well as the config parity bit in order to confirm that the sensor is still functional. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>isFunctional</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="336" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aa8b1dadac82e6bd2f2fb55fb0e1e25a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::hasWakeUp</definition>
        <argsstring>()</argsstring>
        <name>hasWakeUp</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::hasWakeUp</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>hasWakeUp</computeroutput> checks if a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor has wake-up functionality. It simply checks the bitfield which indicates if the sensor has a wake-up functionality or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>hasWakeUp</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="350" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ae0ea1e5243062809a7340963890ac86f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::isWakeUpEnabled</definition>
        <argsstring>()</argsstring>
        <name>isWakeUpEnabled</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::isWakeUpEnabled</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>isWakeUpEnabled</computeroutput> checks if wake-up mode is enabled for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. It checks the bitfield of the sensor which gives you the information if the wake-up is enabled or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>isWakeUpEnabled</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="362" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a94a8515a4f55fbed9c24fc0db7036bf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::enableWakeUpMode</definition>
        <argsstring>()</argsstring>
        <name>enableWakeUpMode</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::enableWakeUpMode</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>enableWakeUpMode</computeroutput> enables the wake-up mode for the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>enableWakeUpMode</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="373" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a1bed4884d6d8b94478f6c51e25467029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::disableWakeUpMode</definition>
        <argsstring>()</argsstring>
        <name>disableWakeUpMode</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::disableWakeUpMode</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>disableWakeUpMode</computeroutput> disables the wake-up mode of a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>disableWakeUpMode</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="384" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aa3a8228db290cb8bd6e41d87c81ac1a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setWakeUpThresholdsAsInteger</definition>
        <argsstring>(int16_t xl_th, int16_t xh_th, int16_t yl_th, int16_t yh_th, int16_t zl_th, int16_t zh_th)</argsstring>
        <name>setWakeUpThresholdsAsInteger</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setWakeUpThresholdsAsInteger</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>xl_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>xh_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>yl_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>yh_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>zl_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>zh_th</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setWakeUpThresholdsAsInteger</computeroutput> sets the wake-up thresholds for a <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor using integer values. It sets the lower and upper threshold for each of three axis. If one of these thresholds is exceeded the sensor will trigger an interrupt. It will continue to trigger interrupts as long as the threshold is exceeded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">xl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in z-axis.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setWakeUpThresholdsAsInteger</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="405" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="405" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1acde50a5b09d4a1ae76915e3a764d47cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::setWakeUpThresholds</definition>
        <argsstring>(double temperature, double xl_th, double xh_th, double yl_th, double yh_th, double zl_th, double zh_th)</argsstring>
        <name>setWakeUpThresholds</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::setWakeUpThresholds</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>temperature</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>xl_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>xh_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>yl_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>yh_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>zl_th</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>zh_th</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>setWakeUpThresholds</computeroutput> sets the wake-up thresholds for the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor in mT. It sets the lower and upper threshold for each of three axis in mT. If one of these thresholds is exceeded the sensor will trigger an interrupt. It will continue to trigger interrupts as long as the threshold is exceeded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>The temperature to be used for derating the field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in z-axis.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>setWakeUpThresholds</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="427" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="427" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a6a2b436d4eb274187d6c0bd6ebe9d17d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">bool</ref></type>
        <definition>bool ifx::tlx493d::TLx493DBase::softwareReset</definition>
        <argsstring>()</argsstring>
        <name>softwareReset</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::softwareReset</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>softwareReset</computeroutput> performs a software reset on the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>softwareReset</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="438" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="438" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ae4b4f16e008ad5386b4a7a6f4a6e59ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">const</ref> <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">char</ref> *</type>
        <definition>const char * ifx::tlx493d::TLx493DBase::getTypeAsString</definition>
        <argsstring>()</argsstring>
        <name>getTypeAsString</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getTypeAsString</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getTypeAsString</computeroutput> returns the type of the <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensor as a string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function <computeroutput>tlx493d_getTypeAsString</computeroutput> returns a pointer to a constant character string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="449" column="28" bodyfile="src/TLx493DBase.hpp" bodystart="449" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a099c3a0aabcdd89f19d5eead75dc5848" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">void</ref></type>
        <definition>void ifx::tlx493d::TLx493DBase::calculateRawMagneticFieldAtTemperature</definition>
        <argsstring>(int16_t rawTemp, TLx493D_SensitivityType_t sens, double xInmT, double yInmT, double zInmT, int16_t *x, int16_t *y, int16_t *z)</argsstring>
        <name>calculateRawMagneticFieldAtTemperature</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::calculateRawMagneticFieldAtTemperature</qualifiedname>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref></type>
          <declname>rawTemp</declname>
        </param>
        <param>
          <type>TLx493D_SensitivityType_t</type>
          <declname>sens</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>xInmT</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>yInmT</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">double</ref></type>
          <declname>zInmT</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">int16_t</ref> *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>calculateRawMagneticFieldAtTemperature</computeroutput> calculates the raw magnetic field at a given temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rawTemp</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw temperature value obtained from the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sens</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>sens</computeroutput> is of type <computeroutput>TLx493D_SensitivityType_t</computeroutput>, which is an enumeration type representing the sensitivity level of the sensor. It is used to specify the desired sensitivity level for calculating the raw magnetic field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xInmT</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>xInmT</computeroutput> represents the magnetic field strength in Millitesla (mT) along the x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yInmT</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>yInmT</computeroutput> represents the magnetic field strength in Millitesla (mT) along the y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zInmT</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>zInmT</computeroutput> represents the magnetic field strength in Millitesla (mT) along the z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the calculated raw magnetic field in the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the calculated raw magnetic field in the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the calculated raw magnetic field in the z-axis will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="474" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="474" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aae77874085c0fb8c61b600225160709b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">void</ref></type>
        <definition>void ifx::tlx493d::TLx493DBase::printRegisters</definition>
        <argsstring>()</argsstring>
        <name>printRegisters</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::printRegisters</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>printRegisters</computeroutput> prints out the internal registers of the sensor object. It can be used to check certain values of the sensor register map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="484" column="22" bodyfile="src/TLx493DBase.hpp" bodystart="484" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a401c020eec95bedb533097948a25c983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
        <definition>TLx493D_t * ifx::tlx493d::TLx493DBase::getSensor</definition>
        <argsstring>()</argsstring>
        <name>getSensor</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getSensor</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getSensor</computeroutput> retrieves the sensor object of the class. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the sensor structure <computeroutput><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="495" column="27" bodyfile="src/TLx493DBase.hpp" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1af1c8bbfd4d22690329de2163eee4acba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TLx493D_SupportedSensorType_t</type>
        <definition>TLx493D_SupportedSensorType_t ifx::tlx493d::TLx493DBase::getSensorType</definition>
        <argsstring>()</argsstring>
        <name>getSensorType</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getSensorType</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getSensorType</computeroutput> retrieves the specific sensor type from the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput>TLx493D_SupportedSensorType_t</computeroutput> enum which contains the specific sensor type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="504" column="47" bodyfile="src/TLx493DBase.hpp" bodystart="504" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a33cc04691fe722ed9b903cb38024e351" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TLx493D_SupportedComLibraryInterfaceType_t</type>
        <definition>TLx493D_SupportedComLibraryInterfaceType_t ifx::tlx493d::TLx493DBase::getComLibIFType</definition>
        <argsstring>()</argsstring>
        <name>getComLibIFType</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getComLibIFType</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getComLibIFType</computeroutput> is returning the communication interface of the sensor. It is reading out the corresponding structure member of the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput>TLx493D_SupportedComLibraryInterfaceType_t</computeroutput> enum which contains the communication interface type. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLx493D_I2C_e</parametername>
</parameternamelist>
<parameterdescription>
<para>0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLx493D_SPI_e</parametername>
</parameternamelist>
<parameterdescription>
<para>1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="517" column="60" bodyfile="src/TLx493DBase.hpp" bodystart="517" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aa7093eecfdfe289ec59de705e976a959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">uint8_t</ref> *</type>
        <definition>uint8_t * ifx::tlx493d::TLx493DBase::getRegisterMap</definition>
        <argsstring>()</argsstring>
        <name>getRegisterMap</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getRegisterMap</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getRegisterMap</computeroutput> gets the internal register map of the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the register map array with its saved values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="526" column="25" bodyfile="src/TLx493DBase.hpp" bodystart="526" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a1df25ee8099e8bb47e964cd4b41cb499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t ifx::tlx493d::TLx493DBase::getRegisterMapSize</definition>
        <argsstring>()</argsstring>
        <name>getRegisterMapSize</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getRegisterMapSize</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getRegisterMapSize</computeroutput> returns the register map size of the internal register map of the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of the internal register map. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="536" column="25" bodyfile="src/TLx493DBase.hpp" bodystart="536" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a6ba8cfdaf1e90b11d06cb02d5d84f0a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t ifx::tlx493d::TLx493DBase::getI2CAddress</definition>
        <argsstring>()</argsstring>
        <name>getI2CAddress</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::getI2CAddress</qualifiedname>
        <briefdescription>
<para>The function <computeroutput>getI2CAddress</computeroutput> is returning the I2C address of the sensor. It is reading out the I2C address stored within the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>I2C address of the sensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="546" column="25" bodyfile="src/TLx493DBase.hpp" bodystart="546" bodyend="548"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a87f0fa42b4133a514d86f0780d1bcb45" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ifx::tlx493d::TLx493DBase::TLx493DBase</definition>
        <argsstring>()</argsstring>
        <name>TLx493DBase</name>
        <qualifiedname>ifx::tlx493d::TLx493DBase::TLx493DBase</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d_base" kindref="compound">TLx493DBase</ref></computeroutput> is the constructor of the class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TLx493DBase.hpp" line="557" column="17" bodyfile="src/TLx493DBase.hpp" bodystart="557" bodyend="558"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classifx_1_1tlx493d_1_1_t_lx493_d_base" kindref="compound">TLx493DBase</ref></computeroutput> is the base class of the different <ref refid="classifx_1_1tlx493d_1_1_t_lx493_d" kindref="compound">TLx493D</ref> sensors variants. It defines all available functions of the sensors and routes the member function calls to the underlying c-function calls, which will be executed in the end. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ifx::tlx493d::TLx493D&lt; BoardSupportClass, BusWrapper, sensorType &gt;</label>
        <link refid="classifx_1_1tlx493d_1_1_t_lx493_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ifx::tlx493d::TLx493D&lt; BoardSupport, SPIClassWrapper, sensorType &gt;</label>
        <link refid="classifx_1_1tlx493d_1_1_t_lx493_d_3_01_board_support_00_01_s_p_i_class_wrapper_00_01sensor_type_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>ifx::tlx493d::TLx493D&lt; BoardSupport, TwoWireWrapper, sensorType &gt;</label>
        <link refid="classifx_1_1tlx493d_1_1_t_lx493_d_3_01_board_support_00_01_two_wire_wrapper_00_01sensor_type_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ifx::tlx493d::TLx493DBase</label>
        <link refid="classifx_1_1tlx493d_1_1_t_lx493_d_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>TLx493D_BoardSupportInterface_t</label>
        <link refid="struct_t_lx493_d___board_support_interface__t"/>
        <childnode refid="12" relation="usage">
          <edgelabel>boardSupportObj</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>TLx493D_BoardSupportObject_t</label>
        <link refid="union_t_lx493_d___board_support_object__t"/>
      </node>
      <node id="6">
        <label>TLx493D_ComLibraryFunctions_t</label>
        <link refid="struct_t_lx493_d___com_library_functions__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>iic_deinit</edgelabel>
          <edgelabel>iic_init</edgelabel>
          <edgelabel>iic_setReadAddress</edgelabel>
          <edgelabel>iic_transfer</edgelabel>
          <edgelabel>spi_deinit</edgelabel>
          <edgelabel>spi_init</edgelabel>
          <edgelabel>spi_setReadAddress</edgelabel>
          <edgelabel>spi_transfer</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>TLx493D_ComLibraryObject_t</label>
        <link refid="union_t_lx493_d___com_library_object__t"/>
      </node>
      <node id="7">
        <label>TLx493D_ComLibraryParameters_t</label>
        <link refid="union_t_lx493_d___com_library_parameters__t"/>
        <childnode refid="8" relation="usage">
          <edgelabel>spi_params</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>iic_params</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>TLx493D_CommonFunctions_t</label>
        <link refid="struct_t_lx493_d___common_functions__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>calculateBusParity</edgelabel>
          <edgelabel>calculateConfigurationParity</edgelabel>
          <edgelabel>calculateFuseParity</edgelabel>
          <edgelabel>calculateMagneticField</edgelabel>
          <edgelabel>calculateMagneticFieldAndTemperature</edgelabel>
          <edgelabel>calculateRawMagneticField</edgelabel>
          <edgelabel>calculateRawMagneticFieldAndTemperature</edgelabel>
          <edgelabel>calculateRawMagneticFieldAtTemperature</edgelabel>
          <edgelabel>calculateRawTemperature</edgelabel>
          <edgelabel>calculateTemperature</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>TLx493D_CommunicationInterface_t</label>
        <link refid="struct_t_lx493_d___communication_interface__t"/>
        <childnode refid="6" relation="usage">
          <edgelabel>comLibFuncs</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>comLibParams</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>comLibObj</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>TLx493D_I2CParameters_t</label>
        <link refid="struct_t_lx493_d___i2_c_parameters__t"/>
      </node>
      <node id="3">
        <label>TLx493D_Register_t</label>
        <link refid="struct_t_lx493_d___register__t"/>
      </node>
      <node id="8">
        <label>TLx493D_SPIParameters_t</label>
        <link refid="struct_t_lx493_d___s_p_i_parameters__t"/>
      </node>
      <node id="2">
        <label>TLx493D_t</label>
        <link refid="struct_t_lx493_d__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>regDef</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>functions</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>comInterface</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>boardSupportInterface</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>ifx::tlx493d::TLx493DBase</label>
        <link refid="classifx_1_1tlx493d_1_1_t_lx493_d_base"/>
        <childnode refid="2" relation="usage">
          <edgelabel>sensor</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/TLx493DBase.hpp" line="25" column="9" bodyfile="src/TLx493DBase.hpp" bodystart="25" bodyend="561"/>
    <listofallmembers>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a099c3a0aabcdd89f19d5eead75dc5848" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>calculateRawMagneticFieldAtTemperature</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ad202988c2ec6e4b2933cf39cc3181307" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>disableCollisionAvoidance</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a2c52a80fe7a1330efb88df7ba609688d" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>disableInterrupt</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a1bed4884d6d8b94478f6c51e25467029" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>disableWakeUpMode</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a8ed387fc20229e511a3b28f014ba9124" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>enableCollisionAvoidance</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a94ad0d2de8c157093f0147bc962a3838" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>enableInterrupt</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a94a8515a4f55fbed9c24fc0db7036bf4" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>enableWakeUpMode</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a33cc04691fe722ed9b903cb38024e351" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getComLibIFType</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a6ba8cfdaf1e90b11d06cb02d5d84f0a6" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getI2CAddress</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a94dd25babad646f77c23b6bea6cefbea" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getMagneticField</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a83b11b5501c4f5a56b14b0e22df4ccbc" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getMagneticFieldAndTemperature</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aca40ab62e823a3a023152950acca3616" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getRawMagneticField</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1af6625e220da1e6778e2683a6c86a443a" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getRawMagneticFieldAndTemperature</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ad6fc56fe8e622358b899914a509b618d" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getRawTemperature</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aa7093eecfdfe289ec59de705e976a959" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getRegisterMap</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a1df25ee8099e8bb47e964cd4b41cb499" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getRegisterMapSize</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a401c020eec95bedb533097948a25c983" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getSensor</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1af1c8bbfd4d22690329de2163eee4acba" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getSensorType</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a50a2b733e072eaf7a33f6f210a45eda8" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getTemperature</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ae4b4f16e008ad5386b4a7a6f4a6e59ba" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>getTypeAsString</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a69b1048a8dcd2b27b5acc4b29c5278ca" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>hasValidData</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aa8b1dadac82e6bd2f2fb55fb0e1e25a4" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>hasWakeUp</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a8a53e83a0c2c39bd5191270e899ccfac" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>isFunctional</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1ae0ea1e5243062809a7340963890ac86f" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>isWakeUpEnabled</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aae77874085c0fb8c61b600225160709b" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>printRegisters</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a5b7ef6a538441e34214266588c7da24f" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>readRegisters</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a0459a98ac5163dbccd71e87ad6ed869b" prot="protected" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>sensor</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a4819dbb661044e3abbee2cb7361d8495" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setDefaultConfig</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a82aa43dd9b6481f5257f7ef068aadd39" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setIICAddress</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a25cede7adea18d8102dff6a042ac8eaf" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setMeasurement</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a897dd0914d7755d101d0cb998b11adfd" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setPowerMode</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a1486af09f7f556b5cbee7084f6164991" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setSensitivity</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a7872446202dcb1e07f764df2f0db15db" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setTrigger</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a30bfd717a0eb8163fb47ccfe4b1b60c9" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setUpdateRate</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1acde50a5b09d4a1ae76915e3a764d47cc" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setWakeUpThresholds</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1aa3a8228db290cb8bd6e41d87c81ac1a3" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>setWakeUpThresholdsAsInteger</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a6a2b436d4eb274187d6c0bd6ebe9d17d" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>softwareReset</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a87f0fa42b4133a514d86f0780d1bcb45" prot="protected" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>TLx493DBase</name></member>
      <member refid="classifx_1_1tlx493d_1_1_t_lx493_d_base_1a24f4d862b63590f82e1f8020bc2161ec" prot="public" virt="non-virtual"><scope>ifx::tlx493d::TLx493DBase</scope><name>~TLx493DBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

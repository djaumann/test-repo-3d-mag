<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tlx493d__types_8h" kind="file" language="C++">
    <compoundname>tlx493d_types.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="pal_8h" local="yes">pal.h</includes>
    <includedby refid="_board_support_using_kit2_go_8cpp" local="yes">src/BoardSupportUsingKit2Go.cpp</includedby>
    <includedby refid="_board_support_using_kit2_go_8hpp" local="yes">src/BoardSupportUsingKit2Go.hpp</includedby>
    <includedby refid="_communication_interface_8cpp" local="yes">src/CommunicationInterface.cpp</includedby>
    <includedby refid="_i_i_c_using_two_wire_8cpp" local="yes">src/IICUsingTwoWire.cpp</includedby>
    <includedby refid="_i_i_c_using_two_wire_8hpp" local="yes">src/IICUsingTwoWire.hpp</includedby>
    <includedby refid="_logger_8cpp" local="yes">src/Logger.cpp</includedby>
    <includedby refid="_s_p_i_using_s_p_i_class_8cpp" local="yes">src/SPIUsingSPIClass.cpp</includedby>
    <includedby refid="_s_p_i_using_s_p_i_class_8hpp" local="yes">src/SPIUsingSPIClass.hpp</includedby>
    <includedby refid="_t_lx493_d_8hpp" local="yes">src/TLx493D.hpp</includedby>
    <includedby refid="_t_lx493_d_base_8hpp" local="yes">src/TLx493DBase.hpp</includedby>
    <includedby refid="_t_lx493_d___a1_b6_8c" local="yes">src/TLx493D_A1B6.c</includedby>
    <includedby refid="_t_lx493_d___a1_b6_8h" local="yes">src/TLx493D_A1B6.h</includedby>
    <includedby refid="_t_lx493_d___a2_b6_8c" local="yes">src/TLx493D_A2B6.c</includedby>
    <includedby refid="_t_lx493_d___a2_b6_8h" local="yes">src/TLx493D_A2B6.h</includedby>
    <includedby refid="_t_lx493_d___p2_b6_8c" local="yes">src/TLx493D_P2B6.c</includedby>
    <includedby refid="_t_lx493_d___p2_b6_8h" local="yes">src/TLx493D_P2B6.h</includedby>
    <includedby refid="_t_lx493_d___p3_b6_8c" local="yes">src/TLx493D_P3B6.c</includedby>
    <includedby refid="_t_lx493_d___p3_b6_8h" local="yes">src/TLx493D_P3B6.h</includedby>
    <includedby refid="_t_lx493_d___p3_i8_8c" local="yes">src/TLx493D_P3I8.c</includedby>
    <includedby refid="_t_lx493_d___p3_i8_8h" local="yes">src/TLx493D_P3I8.h</includedby>
    <includedby refid="_t_lx493_d___w2_b6_8c" local="yes">src/TLx493D_W2B6.c</includedby>
    <includedby refid="_t_lx493_d___w2_b6_8h" local="yes">src/TLx493D_W2B6.h</includedby>
    <includedby refid="_t_lx493_d___w2_b_w_8c" local="yes">src/TLx493D_W2BW.c</includedby>
    <includedby refid="_t_lx493_d___w2_b_w_8h" local="yes">src/TLx493D_W2BW.h</includedby>
    <includedby refid="_t_lx493_d__inc_8hpp" local="yes">src/TLx493D_inc.hpp</includedby>
    <includedby refid="tlx493d_8c" local="yes">src/tlx493d.c</includedby>
    <includedby refid="tlx493d_8h" local="yes">src/tlx493d.h</includedby>
    <includedby refid="tlx493d__common_8c" local="yes">src/tlx493d_common.c</includedby>
    <includedby refid="tlx493d__common_8h" local="yes">src/tlx493d_common.h</includedby>
    <includedby refid="tlx493d__gen__2__common_8c" local="yes">src/tlx493d_gen_2_common.c</includedby>
    <includedby refid="tlx493d__gen__2__common_8h" local="yes">src/tlx493d_gen_2_common.h</includedby>
    <includedby refid="tlx493d__gen__3__common_8c" local="yes">src/tlx493d_gen_3_common.c</includedby>
    <includedby refid="tlx493d__gen__3__common_8h" local="yes">src/tlx493d_gen_3_common.h</includedby>
    <includedby refid="types_8hpp" local="yes">src/types.hpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>CommunicationInterface.h</label>
        <link refid="_communication_interface_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>pal.h</label>
        <link refid="pal_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tlx493d_types.h</label>
        <link refid="tlx493d__types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/BoardSupportUsingKit2Go.hpp</label>
        <link refid="_board_support_using_kit2_go_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/IICUsingTwoWire.hpp</label>
        <link refid="_i_i_c_using_two_wire_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/SPIUsingSPIClass.hpp</label>
        <link refid="_s_p_i_using_s_p_i_class_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/TLx493D.hpp</label>
        <link refid="_t_lx493_d_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/TLx493DBase.hpp</label>
        <link refid="_t_lx493_d_base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/TLx493D_A1B6.h</label>
        <link refid="_t_lx493_d___a1_b6_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/TLx493D_A2B6.h</label>
        <link refid="_t_lx493_d___a2_b6_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/TLx493D_P2B6.h</label>
        <link refid="_t_lx493_d___p2_b6_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/TLx493D_P3B6.h</label>
        <link refid="_t_lx493_d___p3_b6_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/TLx493D_P3I8.h</label>
        <link refid="_t_lx493_d___p3_i8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/TLx493D_W2B6.h</label>
        <link refid="_t_lx493_d___w2_b6_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/TLx493D_W2BW.h</label>
        <link refid="_t_lx493_d___w2_b_w_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/TLx493D_inc.hpp</label>
        <link refid="_t_lx493_d__inc_8hpp_source"/>
      </node>
      <node id="16">
        <label>src/tlx493d.h</label>
        <link refid="tlx493d_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/tlx493d_common.h</label>
        <link refid="tlx493d__common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/tlx493d_gen_2_common.h</label>
        <link refid="tlx493d__gen__2__common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/tlx493d_gen_3_common.h</label>
        <link refid="tlx493d__gen__3__common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tlx493d_types.h</label>
        <link refid="tlx493d__types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/types.hpp</label>
        <link refid="types_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_t_lx493_d___register__t" prot="public">TLx493D_Register_t</innerclass>
    <innerclass refid="struct_t_lx493_d___s_p_i_parameters__t" prot="public">TLx493D_SPIParameters_t</innerclass>
    <innerclass refid="struct_t_lx493_d___i2_c_parameters__t" prot="public">TLx493D_I2CParameters_t</innerclass>
    <innerclass refid="struct_t_lx493_d___com_library_functions__t" prot="public">TLx493D_ComLibraryFunctions_t</innerclass>
    <innerclass refid="union_t_lx493_d___com_library_parameters__t" prot="public">TLx493D_ComLibraryParameters_t</innerclass>
    <innerclass refid="union_t_lx493_d___com_library_object__t" prot="public">TLx493D_ComLibraryObject_t</innerclass>
    <innerclass refid="struct_t_lx493_d___communication_interface__t" prot="public">TLx493D_CommunicationInterface_t</innerclass>
    <innerclass refid="union_t_lx493_d___board_support_object__t" prot="public">TLx493D_BoardSupportObject_t</innerclass>
    <innerclass refid="struct_t_lx493_d___board_support_interface__t" prot="public">TLx493D_BoardSupportInterface_t</innerclass>
    <innerclass refid="struct_t_lx493_d___common_functions__t" prot="public">TLx493D_CommonFunctions_t</innerclass>
    <innerclass refid="struct_t_lx493_d__t" prot="public">TLx493D_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_SupportedSensorType_t</name>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567a25b3cad062a6e622562b100ebc8bfe1a" prot="public">
          <name>TLx493D_A1B6_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567a2df88e60ef1493045651fa4869cde3c9" prot="public">
          <name>TLx493D_A2B6_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567ac18c92e05f3a94e65a6c5419f20a66b2" prot="public">
          <name>TLx493D_P2B6_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567af3636f3d783d4b8d209258dbb9b40112" prot="public">
          <name>TLx493D_W2B6_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567a1db12048d41478226f71327e2ab077b5" prot="public">
          <name>TLx493D_W2BW_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567af710a9d208bd7d550a1a4ef3d90fd24f" prot="public">
          <name>TLx493D_P3B6_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ab0b9d5875fb2a81147034a29ed88d567a13550577a1ccaa65e11d572fae99c1aa" prot="public">
          <name>TLx493D_P3I8_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_SupportedSensorType_t</computeroutput> defines all the supported sensor types of the library. </para>
        </briefdescription>
        <detaileddescription>
<para>std includes project c includes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="22" column="1" bodyfile="src/tlx493d_types.h" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a2d656a7e00d7a489c7f6c1929c09a20b" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_SupportedComLibraryInterfaceType_t</name>
        <enumvalue id="tlx493d__types_8h_1a2d656a7e00d7a489c7f6c1929c09a20bab480306b461171a879cad4cbfd87aebe" prot="public">
          <name>TLx493D_I2C_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a2d656a7e00d7a489c7f6c1929c09a20baab1aa90ddede05c44bdfdaefc9eb7634" prot="public">
          <name>TLx493D_SPI_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_SupportedComLibraryInterfaceType_t</computeroutput> defines the supported communication interfaces of of the different sensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="37" column="1" bodyfile="src/tlx493d_types.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1ac39893334c62b79aace74c7be6e8764a" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_RegisterAccessModeType_t</name>
        <enumvalue id="tlx493d__types_8h_1ac39893334c62b79aace74c7be6e8764aab55f856309d50911916febd53ff48063" prot="public">
          <name>TLx493D_READ_MODE_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ac39893334c62b79aace74c7be6e8764aa3fe7f72aa42b35fce55a40292d31a7b0" prot="public">
          <name>TLx493D_WRITE_MODE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1ac39893334c62b79aace74c7be6e8764aa02f03a0a976cada144ed410082c12e2b" prot="public">
          <name>TLx493D_READ_WRITE_MODE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_RegisterAccessModeType_t</computeroutput> defines the access modes of the different registers inside the sensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="46" column="1" bodyfile="src/tlx493d_types.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_IICAddressType_t</name>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168a3ac4b703a4249bcf56136ab879aa0761" prot="public">
          <name>TLx493D_IIC_ADDR_A0_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168a0f50e738d9656f1f2a243c64ea714d34" prot="public">
          <name>TLx493D_IIC_ADDR_A1_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168ab9a2dd9d625054b5c3724763f7415dc0" prot="public">
          <name>TLx493D_IIC_ADDR_A2_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168a6b8f581e315c76acac419179225dcdfb" prot="public">
          <name>TLx493D_IIC_ADDR_A3_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168a9bf13908b6c3c6944545366e41e4b574" prot="public">
          <name>TLx493D_IIC_ADDR_A4_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168abf690053456389c493b72e373df87903" prot="public">
          <name>TLx493D_IIC_ADDR_A5_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168a36e3c6e235c857bff39230b13805574f" prot="public">
          <name>TLx493D_IIC_ADDR_A6_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a6df2fc1cfd0c4369273d8fa2c15cf168abb92722d349946e25138fca037f004f7" prot="public">
          <name>TLx493D_IIC_ADDR_A7_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_IICAddressType_t</computeroutput> defines the possible I2C addresses of the different sensors. They&apos;re used to establish a connection to the sensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="56" column="1" bodyfile="src/tlx493d_types.h" bodystart="56" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_MeasurementType_t</name>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74acb95abc13598e5aea6823a2479cc8dc7" prot="public">
          <name>TLx493D_BxByBz_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74a8d7a13b6703199f180d4d161cd46618c" prot="public">
          <name>TLx493D_BxByBzTemp_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74a98c90a9f80404fe7c4d32cc561d9ced2" prot="public">
          <name>TLx493D_VHall_Bias_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74a5b8cba846496d590cbd1e810139829ce" prot="public">
          <name>TLx493D_Spintest_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74ab2df907f638773f5005bdac3a53aa4f2" prot="public">
          <name>TLx493D_SAT_test_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74a242f5c8c984d45de03cf1d58d95e96a5" prot="public">
          <name>TLx493D_BxTemp_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74af78f3e1003c249d1c8c6cd137c29d6b7" prot="public">
          <name>TLx493D_BxBy_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a18c090cf149e203d0869d9a870a35d74a3389fcdcbbc9c5a618ef7b1ee369b900" prot="public">
          <name>TLx493D_BzTemp_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_MeasurementType_t</computeroutput> defines the different measurement modes of the sensors. You have to make sure that you are using a mode which is available for your used sensor family (1st Gen, 2nd Gen, etc.). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="72" column="1" bodyfile="src/tlx493d_types.h" bodystart="72" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dc" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_TriggerType_t</name>
        <enumvalue id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dca91489a0d73cf82e5cc11031c90f5b947" prot="public">
          <name>TLx493D_NO_ADC_ON_READ_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dcafe339b9abc8a8d4ed71c33c32f78f76e" prot="public">
          <name>TLx493D_ADC_ON_READ_BEFORE_FIRST_MSB_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dca1110313a85cf1ee59313c0bb325f884f" prot="public">
          <name>TLx493D_ADC_ON_READ_AFTER_REG_05_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dca594e04a8eb6e31c7f0db7b05127969dc" prot="public">
          <name>TLx493D_NO_TRIGGER_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dcadb4ecf984e2b0368171f3ccf0b02cf78" prot="public">
          <name>TLx493D_ADC_ON_READ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a5600149985df455d4351a301ffdf83dcaee4c1a7018321955c21d58f467dee1a2" prot="public">
          <name>TLx493D_ADC_ON_STOP_CONDITION_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_TriggerType_t</computeroutput> defines the different trigger modes for the sensors. You have to make sure that you are using a mode which is available for your used sensor family (1st Gen, 2nd Gen, etc.). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="93" column="1" bodyfile="src/tlx493d_types.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a708db8b1629d8ce740cb01936444d10c" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_SensitivityType_t</name>
        <enumvalue id="tlx493d__types_8h_1a708db8b1629d8ce740cb01936444d10ca110c5bb6940a9ad0d8ae6b87c3c17466" prot="public">
          <name>TLx493D_FULL_RANGE_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a708db8b1629d8ce740cb01936444d10ca36860a635f11b80edbfbf91905234607" prot="public">
          <name>TLx493D_SHORT_RANGE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a708db8b1629d8ce740cb01936444d10caeb89549efd4c4bdfdb6c74616639cb25" prot="public">
          <name>TLx493D_EXTRA_SHORT_RANGE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_SensitivityType_t</computeroutput> defines the different range settings for the sensors. You have to make sure that you&apos;re using a mode which is available for your used sensor family (1st Gen, 2nd Gen, etc.). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="110" column="1" bodyfile="src/tlx493d_types.h" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a465d5ee1c43a4b9c21f7edb5e2482397" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_AvailableSensitivityType_t</name>
        <enumvalue id="tlx493d__types_8h_1a465d5ee1c43a4b9c21f7edb5e2482397a52e9636f3070cedc2e6e6947c01b09ce" prot="public">
          <name>TLx493D_HAS_X1_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a465d5ee1c43a4b9c21f7edb5e2482397a4200c10ff4f02668ad40a5439de966b7" prot="public">
          <name>TLx493D_HAS_X2_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a465d5ee1c43a4b9c21f7edb5e2482397a0eb150a8ef58d3d2017c0ef89804d34d" prot="public">
          <name>TLx493D_HAS_X4_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_AvailableSensitivityType_t</computeroutput> defines the different bits which define the range of the used sensor. They are different depending on the used sensor type. The <computeroutput>TLx493D_SensitivityType_t</computeroutput> depends on the available <computeroutput>TLx493D_AvailableSensitivityType_t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="122" column="1" bodyfile="src/tlx493d_types.h" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a55b3c7e7504d0c95c7ea50b0ad672b73" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_PowerModeType_t</name>
        <enumvalue id="tlx493d__types_8h_1a55b3c7e7504d0c95c7ea50b0ad672b73a20770225eb7d4082f5d649641d140730" prot="public">
          <name>TLx493D_POWER_DOWN_MODE_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a55b3c7e7504d0c95c7ea50b0ad672b73a1d28a9ec611a6120ba02a176703394c4" prot="public">
          <name>TLx493D_FAST_MODE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a55b3c7e7504d0c95c7ea50b0ad672b73a9177d1559ddbf4723b19bf0d53e2918c" prot="public">
          <name>TLx493D_LOW_POWER_MODE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a55b3c7e7504d0c95c7ea50b0ad672b73a2797a0415459f157ebe0fe7edcfb723e" prot="public">
          <name>TLx493D_ULTRA_LOW_POWER_MODE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a55b3c7e7504d0c95c7ea50b0ad672b73a07585edf199e6e65b3f6cc3f90a12e35" prot="public">
          <name>TLx493D_MASTER_CONTROLLED_MODE_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_PowerModeType_t</computeroutput> defines the different power modes of the sensors. The available ones are depending on the sensor variant that you are using. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="133" column="1" bodyfile="src/tlx493d_types.h" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="enum" id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2d" prot="public" static="no" strong="no">
        <type></type>
        <name>TLx493D_UpdateRateType_t</name>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da5a3f9594b32c585f0fa3d334a35bab30" prot="public">
          <name>TLx493D_UPDATE_RATE_FAST_e</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2dae8b953ca8a0bd62c454d4ed6a1a2d68b" prot="public">
          <name>TLx493D_UPDATE_RATE_SLOW_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2daac42d170897951430d4751a2748e4a48" prot="public">
          <name>TLx493D_UPDATE_RATE_770_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da50c343fda74cd6b70882e49ad9c4d940" prot="public">
          <name>TLx493D_UPDATE_RATE_97_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da3b3f4d053c66b04ab6050bc4783928d9" prot="public">
          <name>TLx493D_UPDATE_RATE_24_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da46f8275095ba0819e60a31eac0b079dc" prot="public">
          <name>TLx493D_UPDATE_RATE_12_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da9152c375071ad69894f72452de6ba39d" prot="public">
          <name>TLx493D_UPDATE_RATE_6_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da06b586522076e1652d86f9940941a258" prot="public">
          <name>TLx493D_UPDATE_RATE_3_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da6e43031c12b771af87a4fe9b43646e0c" prot="public">
          <name>TLx493D_UPDATE_RATE_0_4_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da423418c24b5ecd54e0b5bfef7cdb67f8" prot="public">
          <name>TLx493D_UPDATE_RATE_0_05_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da75b20b5ae3e10e98970936b778fbc4b6" prot="public">
          <name>TLx493D_UPDATE_RATE_1000_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da2ecba671340654a9d2a4a03822f09114" prot="public">
          <name>TLx493D_UPDATE_RATE_125_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da1523eba54d1a636b7ffbaf6b94a63419" prot="public">
          <name>TLx493D_UPDATE_RATE_31_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tlx493d__types_8h_1a137b41e02d4a5df0c264f40123c8cf2da8676762a03cf5376bbddba869482a8ea" prot="public">
          <name>TLx493D_UPDATE_RATE_16_HZ_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enumeration <computeroutput>TLx493D_UpdateRateType_t</computeroutput> defines the different update rates of the sensors. Depending on which sensor variant you&apos;re using you can choose different update rates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="146" column="1" bodyfile="src/tlx493d_types.h" bodystart="146" bodyend="164"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="tlx493d__types_8h_1aae6e5ee9a4cf2575328f7873ab4cc664" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___register__t" kindref="compound">TLx493D_Register_t</ref></type>
        <definition>typedef struct TLx493D_Register_t TLx493D_Register_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_Register_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="struct_t_lx493_d___register__t" kindref="compound">TLx493D_Register_t</ref></computeroutput> is used to store name, access mode, address, mask and offset of registers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="177" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a8de46b1202589ad6f8747cfb5f89250c" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_OneParamsFuncPtr) (TLx493D_t *sensor)</definition>
        <argsstring>)(TLx493D_t *sensor)</argsstring>
        <name>TLx493D_OneParamsFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition of function pointers for the communication and the transfer of data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="180" column="9" bodyfile="src/tlx493d_types.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ab5d6170d500064a9b2b0ce7ea71f710a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_SetReadAddressFuncPtr) (TLx493D_t *sensor, uint8_t address)</definition>
        <argsstring>)(TLx493D_t *sensor, uint8_t address)</argsstring>
        <name>TLx493D_SetReadAddressFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="181" column="9" bodyfile="src/tlx493d_types.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ae976c4a3b3939decd91e0b067b64a3d1" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_TransferFuncPtr) (TLx493D_t *sensor, uint8_t *tx_buffer, uint8_t tx_len, uint8_t *rx_buffer, uint8_t rx_len)</definition>
        <argsstring>)(TLx493D_t *sensor, uint8_t *tx_buffer, uint8_t tx_len, uint8_t *rx_buffer, uint8_t rx_len)</argsstring>
        <name>TLx493D_TransferFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="182" column="9" bodyfile="src/tlx493d_types.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a49dfa7e1c35ccf931a2ebbacfbb6b724" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___s_p_i_parameters__t" kindref="compound">TLx493D_SPIParameters_t</ref></type>
        <definition>typedef struct TLx493D_SPIParameters_t TLx493D_SPIParameters_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_SPIParameters_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="struct_t_lx493_d___s_p_i_parameters__t" kindref="compound">TLx493D_SPIParameters_t</ref></computeroutput> stores the parameter of the SPI interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="190" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1afc7471e1e3fe7514655b7ebdefac27d7" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___i2_c_parameters__t" kindref="compound">TLx493D_I2CParameters_t</ref></type>
        <definition>typedef struct TLx493D_I2CParameters_t TLx493D_I2CParameters_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_I2CParameters_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="struct_t_lx493_d___i2_c_parameters__t" kindref="compound">TLx493D_I2CParameters_t</ref></computeroutput> stores the parameter of the I2C interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="198" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a2761d44a2f76934ffd0bf2e4bbacb952" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___com_library_functions__t" kindref="compound">TLx493D_ComLibraryFunctions_t</ref></type>
        <definition>typedef struct TLx493D_ComLibraryFunctions_t TLx493D_ComLibraryFunctions_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_ComLibraryFunctions_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="struct_t_lx493_d___com_library_functions__t" kindref="compound">TLx493D_ComLibraryFunctions_t</ref></computeroutput> stores the function pointers which are needed for the initialization and the transfer of data, for each communication interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="225" column="31"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ab6ebe51bb0df05cb3f33c62c873643ac" prot="public" static="no">
        <type>union <ref refid="union_t_lx493_d___com_library_parameters__t" kindref="compound">TLx493D_ComLibraryParameters_t</ref></type>
        <definition>typedef union TLx493D_ComLibraryParameters_t TLx493D_ComLibraryParameters_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_ComLibraryParameters_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="union_t_lx493_d___com_library_parameters__t" kindref="compound">TLx493D_ComLibraryParameters_t</ref></computeroutput> is used to store the necessary parameters for both interface (I2C, SPI). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="235" column="32"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1af31affde4c20a6e9d7c16bf2146fe17f" prot="public" static="no">
        <type>union <ref refid="union_t_lx493_d___com_library_object__t" kindref="compound">TLx493D_ComLibraryObject_t</ref></type>
        <definition>typedef union TLx493D_ComLibraryObject_t TLx493D_ComLibraryObject_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_ComLibraryObject_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="union_t_lx493_d___com_library_object__t" kindref="compound">TLx493D_ComLibraryObject_t</ref></computeroutput> is used to store both communication interface objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="244" column="28"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ab7333d6d810c9285d37d96a8b3a20204" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___communication_interface__t" kindref="compound">TLx493D_CommunicationInterface_t</ref></type>
        <definition>typedef struct TLx493D_CommunicationInterface_t TLx493D_CommunicationInterface_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_CommunicationInterface_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="struct_t_lx493_d___communication_interface__t" kindref="compound">TLx493D_CommunicationInterface_t</ref></computeroutput> contains all the important parameters to properly use the communication interface. It uses the previously defined structures <computeroutput><ref refid="struct_t_lx493_d___com_library_functions__t" kindref="compound">TLx493D_ComLibraryFunctions_t</ref></computeroutput>, <computeroutput><ref refid="union_t_lx493_d___com_library_parameters__t" kindref="compound">TLx493D_ComLibraryParameters_t</ref></computeroutput> and <computeroutput><ref refid="union_t_lx493_d___com_library_object__t" kindref="compound">TLx493D_ComLibraryObject_t</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="256" column="34"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a462f61adf110d839083468a492a42943" prot="public" static="no">
        <type>union <ref refid="union_t_lx493_d___board_support_object__t" kindref="compound">TLx493D_BoardSupportObject_t</ref></type>
        <definition>typedef union TLx493D_BoardSupportObject_t TLx493D_BoardSupportObject_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_BoardSupportObject_t</name>
        <briefdescription>
<para>The union <computeroutput><ref refid="union_t_lx493_d___board_support_object__t" kindref="compound">TLx493D_BoardSupportObject_t</ref></computeroutput> defines the board support object, which is used for Kits2Go. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="265" column="30"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a8e5cca93779bf082d3f60b381815b76f" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___board_support_interface__t" kindref="compound">TLx493D_BoardSupportInterface_t</ref></type>
        <definition>typedef struct TLx493D_BoardSupportInterface_t TLx493D_BoardSupportInterface_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_BoardSupportInterface_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="273" column="33"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a45b35cdabe08a1527797caec2c0f39e9" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_InitFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_InitFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following are the functions which are common to all the sensors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="277" column="9" bodyfile="src/tlx493d_types.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a0a3ca65853a3d26bcae402532e58c72a" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_DeinitFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_DeinitFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="278" column="9" bodyfile="src/tlx493d_types.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a9075a9a0a37c1e43a7a335d2a3e2d45e" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_ReadRegistersFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_ReadRegistersFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="280" column="9" bodyfile="src/tlx493d_types.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a39e44985f5ef86f471c28d6b74577539" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_ReadRegistersAndCheckFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_ReadRegistersAndCheckFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="281" column="9" bodyfile="src/tlx493d_types.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ad2e3901b2a2fd02be8c4f72b4c2cf5a2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateRawTemperatureFuncPtr) (TLx493D_t *, int16_t *)</definition>
        <argsstring>)(TLx493D_t *, int16_t *)</argsstring>
        <name>TLx493D_CalculateRawTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="283" column="9" bodyfile="src/tlx493d_types.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a84c0539458d5acbb18b1c8dc48a35cdd" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_GetRawTemperatureFuncPtr) (TLx493D_t *, int16_t *)</definition>
        <argsstring>)(TLx493D_t *, int16_t *)</argsstring>
        <name>TLx493D_GetRawTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="284" column="9" bodyfile="src/tlx493d_types.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1af0d957c46b72d059c4d240e9554d3120" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateRawMagneticFieldFuncPtr) (TLx493D_t *, int16_t *, int16_t *, int16_t *)</definition>
        <argsstring>)(TLx493D_t *, int16_t *, int16_t *, int16_t *)</argsstring>
        <name>TLx493D_CalculateRawMagneticFieldFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="286" column="9" bodyfile="src/tlx493d_types.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ac9a6d56530995be91e5d36ccc5c91d35" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_GetRawMagneticFieldFuncPtr) (TLx493D_t *, int16_t *, int16_t *, int16_t *)</definition>
        <argsstring>)(TLx493D_t *, int16_t *, int16_t *, int16_t *)</argsstring>
        <name>TLx493D_GetRawMagneticFieldFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="287" column="9" bodyfile="src/tlx493d_types.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a371a888f9e8ca77d21aad25aafa2478e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateRawMagneticFieldAndTemperatureFuncPtr) (TLx493D_t *, int16_t *, int16_t *, int16_t *, int16_t *)</definition>
        <argsstring>)(TLx493D_t *, int16_t *, int16_t *, int16_t *, int16_t *)</argsstring>
        <name>TLx493D_CalculateRawMagneticFieldAndTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="289" column="9" bodyfile="src/tlx493d_types.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a7984845ae7a6ac9f5533359c329ee853" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_GetRawMagneticFieldAndTemperatureFuncPtr) (TLx493D_t *, int16_t *, int16_t *, int16_t *, int16_t *)</definition>
        <argsstring>)(TLx493D_t *, int16_t *, int16_t *, int16_t *, int16_t *)</argsstring>
        <name>TLx493D_GetRawMagneticFieldAndTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="290" column="9" bodyfile="src/tlx493d_types.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1af6f49c1d411a3337fb804e7b0e787889" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateTemperatureFuncPtr) (TLx493D_t *, double *)</definition>
        <argsstring>)(TLx493D_t *, double *)</argsstring>
        <name>TLx493D_CalculateTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="292" column="9" bodyfile="src/tlx493d_types.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a68e4026e2d1f69028ba9bfb136fc9dc6" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_GetTemperatureFuncPtr) (TLx493D_t *, double *)</definition>
        <argsstring>)(TLx493D_t *, double *)</argsstring>
        <name>TLx493D_GetTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="293" column="9" bodyfile="src/tlx493d_types.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1acab73efdf8ee3d8994ebb5b7237d938f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateMagneticFieldFuncPtr) (TLx493D_t *, double *, double *, double *)</definition>
        <argsstring>)(TLx493D_t *, double *, double *, double *)</argsstring>
        <name>TLx493D_CalculateMagneticFieldFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="295" column="9" bodyfile="src/tlx493d_types.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a03c5e2a3c49a2cfea5e810b1704019d3" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_GetMagneticFieldFuncPtr) (TLx493D_t *, double *, double *, double *)</definition>
        <argsstring>)(TLx493D_t *, double *, double *, double *)</argsstring>
        <name>TLx493D_GetMagneticFieldFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="296" column="9" bodyfile="src/tlx493d_types.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aa9cf4958391d07e6706e50a705d85168" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateMagneticFieldAndTemperatureFuncPtr) (TLx493D_t *, double *, double *, double *, double *)</definition>
        <argsstring>)(TLx493D_t *, double *, double *, double *, double *)</argsstring>
        <name>TLx493D_CalculateMagneticFieldAndTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="298" column="9" bodyfile="src/tlx493d_types.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a85b2d8f0fce8eedc2fbf45d9d3e45e87" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_GetMagneticFieldAndTemperatureFuncPtr) (TLx493D_t *, double *, double *, double *, double *)</definition>
        <argsstring>)(TLx493D_t *, double *, double *, double *, double *)</argsstring>
        <name>TLx493D_GetMagneticFieldAndTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="299" column="9" bodyfile="src/tlx493d_types.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aa32bfc020e38b3705ade970b3d09894a" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetMeasurementFuncPtr) (TLx493D_t *, TLx493D_MeasurementType_t)</definition>
        <argsstring>)(TLx493D_t *, TLx493D_MeasurementType_t)</argsstring>
        <name>TLx493D_SetMeasurementFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following are the functions related to the &quot;Config&quot; register. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="303" column="9" bodyfile="src/tlx493d_types.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a9b2cf812b09e2ac659441251571207b5" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetTriggerFuncPtr) (TLx493D_t *, TLx493D_TriggerType_t)</definition>
        <argsstring>)(TLx493D_t *, TLx493D_TriggerType_t)</argsstring>
        <name>TLx493D_SetTriggerFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="304" column="9" bodyfile="src/tlx493d_types.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a539b7cd70ca18b878b00f659f72b9f4f" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetSetSensitivityFuncPtr) (TLx493D_t *, TLx493D_SensitivityType_t)</definition>
        <argsstring>)(TLx493D_t *, TLx493D_SensitivityType_t)</argsstring>
        <name>TLx493D_SetSetSensitivityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="305" column="9" bodyfile="src/tlx493d_types.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a274c7dbf4b7fdc33a3af6e2ed39118e9" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetDefaultConfigFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_SetDefaultConfigFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following are the functions related to the &quot;Mod1&quot; and &quot;Mod2&quot; registers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="309" column="9" bodyfile="src/tlx493d_types.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a973c7527c5e95fb7aa754d0332a3d9d0" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetIICAddressFuncPtr) (TLx493D_t *, TLx493D_IICAddressType_t)</definition>
        <argsstring>)(TLx493D_t *, TLx493D_IICAddressType_t)</argsstring>
        <name>TLx493D_SetIICAddressFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="310" column="9" bodyfile="src/tlx493d_types.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a3f071e23be86e54ae6f2db98eca088db" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_Enable1ByteReadModeFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_Enable1ByteReadModeFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="311" column="9" bodyfile="src/tlx493d_types.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1adae7c996ce4bc2c4950ae430b99bbf6e" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_EnableInterruptFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_EnableInterruptFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="313" column="9" bodyfile="src/tlx493d_types.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a88093002de974bb74421ba157d51f6f5" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_DisableInterruptFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_DisableInterruptFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="314" column="9" bodyfile="src/tlx493d_types.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a418b5be75a0627fecc57ddc067b2f581" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_EnableCollisionAvoidanceFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_EnableCollisionAvoidanceFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="316" column="9" bodyfile="src/tlx493d_types.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1afd9aaf6960f84f34fb50c80f5f616827" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_DisableCollisionAvoidanceFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_DisableCollisionAvoidanceFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="317" column="9" bodyfile="src/tlx493d_types.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1afc769b24665184a05bce41c2001d39ba" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetPowerModeFuncPtr) (TLx493D_t *, TLx493D_PowerModeType_t)</definition>
        <argsstring>)(TLx493D_t *, TLx493D_PowerModeType_t)</argsstring>
        <name>TLx493D_SetPowerModeFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="319" column="9" bodyfile="src/tlx493d_types.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ae856de6a61763ee21b2ce4d4f90555ec" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetUpdateRateFuncPtr) (TLx493D_t *, TLx493D_UpdateRateType_t)</definition>
        <argsstring>)(TLx493D_t *, TLx493D_UpdateRateType_t)</argsstring>
        <name>TLx493D_SetUpdateRateFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="320" column="9" bodyfile="src/tlx493d_types.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aff1df9de488b39a5a23d8243d9912647" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasValidDataFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasValidDataFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following are the functions related to the &quot;Diag&quot; register. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="323" column="9" bodyfile="src/tlx493d_types.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aaf973017f1e2f5518cca74413b216ed3" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_IsFunctionalFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_IsFunctionalFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="324" column="9" bodyfile="src/tlx493d_types.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a89baca79f8446fcb0c4a94e202f0c309" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasWakeUpFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasWakeUpFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following are the functions related to the &quot;WU&quot; register. These are only available to a subset of sensors with wake-up functionality </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="328" column="9" bodyfile="src/tlx493d_types.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ab840ea7cbafc5d5bc539bcd4f603889f" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_IsWakeUpEnabledFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_IsWakeUpEnabledFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="329" column="9" bodyfile="src/tlx493d_types.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a569c02bec2990428cda98d486950e758" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_EnableWakeUpModeFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_EnableWakeUpModeFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="330" column="9" bodyfile="src/tlx493d_types.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a65d58071cb98350800ceb488ca4baa34" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_DisableWakeUpModeFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_DisableWakeUpModeFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="331" column="9" bodyfile="src/tlx493d_types.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ae7abccde4cda659b06cbfa999b2b4a8d" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetWakeUpThresholdsAsIntegerFuncPtr) (TLx493D_t *, int16_t, int16_t, int16_t, int16_t, int16_t, int16_t)</definition>
        <argsstring>)(TLx493D_t *, int16_t, int16_t, int16_t, int16_t, int16_t, int16_t)</argsstring>
        <name>TLx493D_SetWakeUpThresholdsAsIntegerFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="332" column="9" bodyfile="src/tlx493d_types.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aec11eccaf69bf161d16c2fee587c2883" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SetWakeUpThresholdsFuncPtr) (TLx493D_t *, double, double, double, double, double, double, double)</definition>
        <argsstring>)(TLx493D_t *, double, double, double, double, double, double, double)</argsstring>
        <name>TLx493D_SetWakeUpThresholdsFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="333" column="9" bodyfile="src/tlx493d_types.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aece8eb19a7a87fd4491d947b2e3c698a" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_SoftwareResetFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_SoftwareResetFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="335" column="9" bodyfile="src/tlx493d_types.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a45b5417747ae791bd67b982de85d6682" prot="public" static="no">
        <type>uint8_t(*</type>
        <definition>typedef uint8_t(* TLx493D_CalculateFuseParityFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_CalculateFuseParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Following are the functions used internally and not accessible through the common interface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="339" column="9" bodyfile="src/tlx493d_types.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a3373f2d62b77a60dca91f2171c628a27" prot="public" static="no">
        <type>uint8_t(*</type>
        <definition>typedef uint8_t(* TLx493D_CalculateBusParityFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_CalculateBusParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="340" column="9" bodyfile="src/tlx493d_types.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a839c6e28a13c77ae152d7a8bacd6afe5" prot="public" static="no">
        <type>uint8_t(*</type>
        <definition>typedef uint8_t(* TLx493D_CalculateConfigParityFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_CalculateConfigParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="341" column="9" bodyfile="src/tlx493d_types.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a3d3845e07aa75f6a67b1f5eeb46c744e" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasValidFuseParityFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasValidFuseParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="343" column="9" bodyfile="src/tlx493d_types.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a4559abfb545943f42335a1e1729df257" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasValidBusParityFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasValidBusParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="344" column="9" bodyfile="src/tlx493d_types.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a7231fa69c4debd293735af9fa3588444" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasValidConfigParityFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasValidConfigParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="345" column="9" bodyfile="src/tlx493d_types.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a105b5ccc1d1f0f1229444c262dd5b887" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasValidWakeUpParityFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasValidWakeUpParityFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="346" column="9" bodyfile="src/tlx493d_types.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1ae1ec1f4b1437efccfe28da03b3b178ef" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_HasValidTBitFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_HasValidTBitFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="348" column="9" bodyfile="src/tlx493d_types.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a6f4d5d6fb53251152ce504b90c618b64" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* TLx493D_isInTestModeFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_isInTestModeFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="349" column="9" bodyfile="src/tlx493d_types.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1acfde051622b58a096237a8339da1327f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_SetResetValuesFuncPtr) (TLx493D_t *)</definition>
        <argsstring>)(TLx493D_t *)</argsstring>
        <name>TLx493D_SetResetValuesFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="351" column="9" bodyfile="src/tlx493d_types.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1adb4bf2e7371f69f432f3e214722d25a6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_CalculateRawMagneticFieldAtTemperatureFuncPtr) (const TLx493D_t *, int16_t, TLx493D_SensitivityType_t, double, double, double, int16_t *, int16_t *, int16_t *)</definition>
        <argsstring>)(const TLx493D_t *, int16_t, TLx493D_SensitivityType_t, double, double, double, int16_t *, int16_t *, int16_t *)</argsstring>
        <name>TLx493D_CalculateRawMagneticFieldAtTemperatureFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="353" column="9" bodyfile="src/tlx493d_types.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a02e880f16f3f016e9c523b72e8a26362" prot="public" static="no">
        <type>double(*</type>
        <definition>typedef double(* TLx493D_GetSensitivityScaleFactorFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_GetSensitivityScaleFactorFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="357" column="9" bodyfile="src/tlx493d_types.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a44038511d14a79cc21f19949f0639749" prot="public" static="no">
        <type>uint8_t(*</type>
        <definition>typedef uint8_t(* TLx493D_SelectIICAddressFuncPtr) (const TLx493D_t *, TLx493D_IICAddressType_t)</definition>
        <argsstring>)(const TLx493D_t *, TLx493D_IICAddressType_t)</argsstring>
        <name>TLx493D_SelectIICAddressFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="359" column="9" bodyfile="src/tlx493d_types.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a23fcbbb83cf99ce72ee31cc55f922388" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TLx493D_PrintRegistersFuncPtr) (const TLx493D_t *)</definition>
        <argsstring>)(const TLx493D_t *)</argsstring>
        <name>TLx493D_PrintRegistersFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="361" column="9" bodyfile="src/tlx493d_types.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1aae2292b73d13fe19eafa9cd420309e3a" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d___common_functions__t" kindref="compound">TLx493D_CommonFunctions_t</ref></type>
        <definition>typedef struct TLx493D_CommonFunctions_t TLx493D_CommonFunctions_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_CommonFunctions_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Functions used to refer to sensor specific functions by a common name. These functions are not part of the common user C/C++ interface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="450" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="tlx493d__types_8h_1a821e71d2d4983d53bb07f12234212246" prot="public" static="no">
        <type>struct <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref></type>
        <definition>typedef struct TLx493D_t TLx493D_t</definition>
        <argsstring></argsstring>
        <name>TLx493D_t</name>
        <briefdescription>
<para>The structure <computeroutput><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref></computeroutput> stores all relevant information for a particular sensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d_types.h" line="468" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TLX493D_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLX493D_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_A1B6_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_A2B6_e,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_P2B6_e,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_W2B6_e,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_W2BW_e,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_P3B6_e,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_P3I8_e,</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/>TLx493D_SupportedSensorType_t;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_I2C_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_SPI_e,</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/>TLx493D_SupportedComLibraryInterfaceType_t;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>TLx493D_READ_MODE_e<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_WRITE_MODE_e,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_READ_WRITE_MODE_e,</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/>TLx493D_RegisterAccessModeType_t;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A0_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A1_e,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A2_e,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A3_e,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A4_e,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A5_e,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A6_e,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IIC_ADDR_A7_e,</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/>TLx493D_IICAddressType_t;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>and<sp/>2nd<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_BxByBz_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1st<sp/>and<sp/>3rd<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_BxByBzTemp_e,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3rd<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_VHall_Bias_e,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_Spintest_e,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SAT_test_e,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_BxTemp_e,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_BxBy_e,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_BzTemp_e,</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/>TLx493D_MeasurementType_t;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>and<sp/>2nd<sp/>gen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_NO_ADC_ON_READ_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_ADC_ON_READ_BEFORE_FIRST_MSB_e,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_ADC_ON_READ_AFTER_REG_05_e,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3rd<sp/>gen.<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_NO_TRIGGER_e,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_ADC_ON_READ_e,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_ADC_ON_STOP_CONDITION_e,</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/>TLx493D_TriggerType_t;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_FULL_RANGE_e<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_SHORT_RANGE_e,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_EXTRA_SHORT_RANGE_e,</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/>TLx493D_SensitivityType_t;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_HAS_X1_e<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_HAS_X2_e,<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_HAS_X4_e,</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/>TLx493D_AvailableSensitivityType_t;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_POWER_DOWN_MODE_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_FAST_MODE_e,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_LOW_POWER_MODE_e,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_ULTRA_LOW_POWER_MODE_e,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_MASTER_CONTROLLED_MODE_e,</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/>TLx493D_PowerModeType_t;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generation<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_FAST_e<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_SLOW_e,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_770_HZ_e,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_97_HZ_e,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_24_HZ_e,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_12_HZ_e,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_6_HZ_e,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_3_HZ_e,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_0_4_HZ_e,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_0_05_HZ_e,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generation<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_1000_HZ_e,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_125_HZ_e,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_31_HZ_e,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_UPDATE_RATE_16_HZ_e,</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/>TLx493D_UpdateRateType_t;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="struct_t_lx493_d___register__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___register__t" kindref="compound">TLx493D_Register_t</ref><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_RegisterAccessModeType_t<sp/><sp/>accessMode;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numBits;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___register__t" kindref="compound">TLx493D_Register_t</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_OneParamsFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_SetReadAddressFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>uint8_t<sp/>address);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_TransferFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>uint8_t<sp/>*tx_buffer,<sp/>uint8_t<sp/>tx_len,<sp/>uint8_t<sp/>*rx_buffer,<sp/>uint8_t<sp/>rx_len);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="struct_t_lx493_d___s_p_i_parameters__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___s_p_i_parameters__t" kindref="compound">TLx493D_SPIParameters_t</ref><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dummy;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___s_p_i_parameters__t" kindref="compound">TLx493D_SPIParameters_t</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="struct_t_lx493_d___i2_c_parameters__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___i2_c_parameters__t" kindref="compound">TLx493D_I2CParameters_t</ref><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>address;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___i2_c_parameters__t" kindref="compound">TLx493D_I2CParameters_t</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="struct_t_lx493_d___com_library_functions__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___com_library_functions__t" kindref="compound">TLx493D_ComLibraryFunctions_t</ref><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_OneParamsFuncPtr<sp/><sp/>spi_init;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_OneParamsFuncPtr<sp/><sp/>iic_init;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>init;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_OneParamsFuncPtr<sp/><sp/>spi_deinit;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_OneParamsFuncPtr<sp/><sp/>iic_deinit;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>deinit;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_TransferFuncPtr<sp/><sp/>spi_transfer;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_TransferFuncPtr<sp/><sp/>iic_transfer;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>transfer;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_SetReadAddressFuncPtr<sp/><sp/>spi_setReadAddress;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLx493D_SetReadAddressFuncPtr<sp/><sp/>iic_setReadAddress;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>setReadAddress;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___com_library_functions__t" kindref="compound">TLx493D_ComLibraryFunctions_t</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="union_t_lx493_d___com_library_parameters__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_t_lx493_d___com_library_parameters__t" kindref="compound">TLx493D_ComLibraryParameters_t</ref><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___s_p_i_parameters__t" kindref="compound">TLx493D_SPIParameters_t</ref><sp/><sp/>spi_params;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___i2_c_parameters__t" kindref="compound">TLx493D_I2CParameters_t</ref><sp/><sp/>iic_params;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}<sp/><ref refid="union_t_lx493_d___com_library_parameters__t" kindref="compound">TLx493D_ComLibraryParameters_t</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="union_t_lx493_d___com_library_object__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_t_lx493_d___com_library_object__t" kindref="compound">TLx493D_ComLibraryObject_t</ref><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SPIObject_t<sp/><sp/>*spi_obj;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_I2CObject_t<sp/><sp/>*iic_obj;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/><ref refid="union_t_lx493_d___com_library_object__t" kindref="compound">TLx493D_ComLibraryObject_t</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="struct_t_lx493_d___communication_interface__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___communication_interface__t" kindref="compound">TLx493D_CommunicationInterface_t</ref><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___com_library_functions__t" kindref="compound">TLx493D_ComLibraryFunctions_t</ref><sp/><sp/><sp/>*comLibFuncs;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_t_lx493_d___com_library_parameters__t" kindref="compound">TLx493D_ComLibraryParameters_t</ref><sp/><sp/><sp/>comLibParams;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_t_lx493_d___com_library_object__t" kindref="compound">TLx493D_ComLibraryObject_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comLibObj;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___communication_interface__t" kindref="compound">TLx493D_CommunicationInterface_t</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="union_t_lx493_d___board_support_object__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_t_lx493_d___board_support_object__t" kindref="compound">TLx493D_BoardSupportObject_t</ref><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_Kit2GoBoardSupportObject_t<sp/><sp/>*k2go_obj;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/><ref refid="union_t_lx493_d___board_support_object__t" kindref="compound">TLx493D_BoardSupportObject_t</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Is<sp/>this<sp/>needed?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="struct_t_lx493_d___board_support_interface__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___board_support_interface__t" kindref="compound">TLx493D_BoardSupportInterface_t</ref><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TLx493D_BoardSupportFunctions_t<sp/><sp/><sp/>*boardSupportFuncs;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TLx493D_BoardSupportParameters_t<sp/><sp/><sp/>boardSupportParams;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_t_lx493_d___board_support_object__t" kindref="compound">TLx493D_BoardSupportObject_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boardSupportObj;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___board_support_interface__t" kindref="compound">TLx493D_BoardSupportInterface_t</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_InitFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_DeinitFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_ReadRegistersFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_ReadRegistersAndCheckFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateRawTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_GetRawTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateRawMagneticFieldFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_GetRawMagneticFieldFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateRawMagneticFieldAndTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_GetRawMagneticFieldAndTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_GetTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateMagneticFieldFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_GetMagneticFieldFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateMagneticFieldAndTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_GetMagneticFieldAndTemperatureFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetMeasurementFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_MeasurementType_t);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetTriggerFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_TriggerType_t);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetSetSensitivityFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_SensitivityType_t);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetDefaultConfigFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetIICAddressFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_IICAddressType_t);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_Enable1ByteReadModeFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_EnableInterruptFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_DisableInterruptFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_EnableCollisionAvoidanceFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_DisableCollisionAvoidanceFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetPowerModeFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_PowerModeType_t);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetUpdateRateFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_UpdateRateType_t);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasValidDataFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_IsFunctionalFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasWakeUpFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_IsWakeUpEnabledFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_EnableWakeUpModeFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_DisableWakeUpModeFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetWakeUpThresholdsAsIntegerFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t,<sp/>int16_t,<sp/>int16_t,<sp/>int16_t,<sp/>int16_t,<sp/>int16_t);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SetWakeUpThresholdsFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>double,<sp/>double,<sp/>double,<sp/>double,<sp/>double,<sp/>double,<sp/>double);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_SoftwareResetFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>(*TLx493D_CalculateFuseParityFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>(*TLx493D_CalculateBusParityFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>(*TLx493D_CalculateConfigParityFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasValidFuseParityFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasValidBusParityFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasValidConfigParityFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasValidWakeUpParityFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_HasValidTBitFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*TLx493D_isInTestModeFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_SetResetValuesFuncPtr)(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_CalculateRawMagneticFieldAtTemperatureFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>int16_t,<sp/>TLx493D_SensitivityType_t,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double,<sp/>double,<sp/>double,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*,<sp/>int16_t<sp/>*);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>double<sp/>(*TLx493D_GetSensitivityScaleFactorFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>(*TLx493D_SelectIICAddressFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*,<sp/>TLx493D_IICAddressType_t);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TLx493D_PrintRegistersFuncPtr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="struct_t_lx493_d___common_functions__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d___common_functions__t" kindref="compound">TLx493D_CommonFunctions_t</ref><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_InitFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_DeinitFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deinit;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_ReadRegistersFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readRegisters;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_ReadRegistersAndCheckFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readRegistersAndCheck;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateRawTemperatureFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/>calculateRawTemperature;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetRawTemperatureFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getRawTemperature;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateRawMagneticFieldFuncPtr<sp/><sp/><sp/><sp/>calculateRawMagneticField;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetRawMagneticFieldFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getRawMagneticField;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateRawMagneticFieldAndTemperatureFuncPtr<sp/><sp/>calculateRawMagneticFieldAndTemperature;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetRawMagneticFieldAndTemperatureFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getRawMagneticFieldAndTemperature;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateTemperatureFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculateTemperature;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetTemperatureFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getTemperature;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateMagneticFieldFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculateMagneticField;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetMagneticFieldFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getMagneticField;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateMagneticFieldAndTemperatureFuncPtr<sp/><sp/>calculateMagneticFieldAndTemperature;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetMagneticFieldAndTemperatureFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getMagneticFieldAndTemperature;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="struct_t_lx493_d___common_functions__t_1a96d58d2e53d2450b738ecce27d4d602c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetMeasurementFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___common_functions__t_1a96d58d2e53d2450b738ecce27d4d602c" kindref="member">setMeasurement</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetTriggerFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTrigger;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetSetSensitivityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setSensitivity;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397" refid="struct_t_lx493_d___common_functions__t_1abbd2006de41f58542779a727a10be3a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetDefaultConfigFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___common_functions__t_1abbd2006de41f58542779a727a10be3a7" kindref="member">setDefaultConfig</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetIICAddressFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIICAddress;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_Enable1ByteReadModeFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable1ByteReadMode;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_EnableInterruptFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enableInterrupt;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_DisableInterruptFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disableInterrupt;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_EnableCollisionAvoidanceFuncPtr<sp/><sp/><sp/><sp/><sp/>enableCollisionAvoidance;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_DisableCollisionAvoidanceFuncPtr<sp/><sp/><sp/><sp/>disableCollisionAvoidance;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetPowerModeFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setPowerMode;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetUpdateRateFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setUpdateRate;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="struct_t_lx493_d___common_functions__t_1a080b12aaef950ab0a0ce681537895749" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasValidDataFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___common_functions__t_1a080b12aaef950ab0a0ce681537895749" kindref="member">hasValidData</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IsFunctionalFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isFunctional;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="struct_t_lx493_d___common_functions__t_1ab0924bd6f166d01a2c6922d9423e0947" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasWakeUpFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___common_functions__t_1ab0924bd6f166d01a2c6922d9423e0947" kindref="member">hasWakeUp</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_IsWakeUpEnabledFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isWakeUpEnabled;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_EnableWakeUpModeFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enableWakeUpMode;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_DisableWakeUpModeFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disableWakeUpMode;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetWakeUpThresholdsAsIntegerFuncPtr<sp/>setWakeUpThresholdsAsInteger;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetWakeUpThresholdsFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setWakeUpThresholds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SoftwareResetFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>softwareReset;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="struct_t_lx493_d___common_functions__t_1a7e062b49dbfc312e2cd5d5a4fb9a86e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateFuseParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___common_functions__t_1a7e062b49dbfc312e2cd5d5a4fb9a86e2" kindref="member">calculateFuseParity</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateBusParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculateBusParity;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateConfigParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculateConfigurationParity;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasValidFuseParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasValidFuseParity;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasValidBusParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasValidBusParity;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasValidConfigParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasValidConfigurationParity;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasValidWakeUpParityFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasValidWakeUpParity;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_isInTestModeFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInTestMode;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_HasValidTBitFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasValidTBit;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SetResetValuesFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setResetValues;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SelectIICAddressFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectIICAddress;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_CalculateRawMagneticFieldAtTemperatureFuncPtr<sp/><sp/>calculateRawMagneticFieldAtTemperature;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_GetSensitivityScaleFactorFuncPtr<sp/><sp/><sp/><sp/>getSensitivityScaleFactor;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_PrintRegistersFuncPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printRegisters;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d___common_functions__t" kindref="compound">TLx493D_CommonFunctions_t</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="struct_t_lx493_d__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*regMap;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___register__t" kindref="compound">TLx493D_Register_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*regDef;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___common_functions__t" kindref="compound">TLx493D_CommonFunctions_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*functions;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___communication_interface__t" kindref="compound">TLx493D_CommunicationInterface_t</ref><sp/><sp/>comInterface;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_lx493_d___board_support_interface__t" kindref="compound">TLx493D_BoardSupportInterface_t</ref><sp/><sp/><sp/>boardSupportInterface;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regMapSize;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SupportedSensorType_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensorType;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>TLx493D_SupportedComLibraryInterfaceType_t<sp/><sp/>comIFType;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}<sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TLX493D_TYPES_H</highlight></codeline>
    </programlisting>
    <location file="src/tlx493d_types.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tlx493d_8c" kind="file" language="C++">
    <compoundname>tlx493d.c</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="tlx493d_8h" local="yes">tlx493d.h</includes>
    <includes refid="tlx493d__types_8h" local="yes">tlx493d_types.h</includes>
    <includes refid="tlx493d__common__defines_8h" local="yes">tlx493d_common_defines.h</includes>
    <includes refid="tlx493d__common_8h" local="yes">tlx493d_common.h</includes>
    <includes refid="_t_lx493_d___a1_b6_8h" local="yes">TLx493D_A1B6.h</includes>
    <includes refid="_t_lx493_d___a2_b6_8h" local="yes">TLx493D_A2B6.h</includes>
    <includes refid="_t_lx493_d___p2_b6_8h" local="yes">TLx493D_P2B6.h</includes>
    <includes refid="_t_lx493_d___w2_b6_8h" local="yes">TLx493D_W2B6.h</includes>
    <includes refid="_t_lx493_d___w2_b_w_8h" local="yes">TLx493D_W2BW.h</includes>
    <includes refid="_t_lx493_d___p3_b6_8h" local="yes">TLx493D_P3B6.h</includes>
    <includes refid="_t_lx493_d___p3_i8_8h" local="yes">TLx493D_P3I8.h</includes>
    <incdepgraph>
      <node id="10">
        <label>CommunicationInterface.h</label>
        <link refid="_communication_interface_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>TLx493D_A1B6.h</label>
        <link refid="_t_lx493_d___a1_b6_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>TLx493D_A2B6.h</label>
        <link refid="_t_lx493_d___a2_b6_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TLx493D_P2B6.h</label>
        <link refid="_t_lx493_d___p2_b6_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>TLx493D_P3B6.h</label>
        <link refid="_t_lx493_d___p3_b6_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>TLx493D_P3I8.h</label>
        <link refid="_t_lx493_d___p3_i8_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TLx493D_W2B6.h</label>
        <link refid="_t_lx493_d___w2_b6_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TLx493D_W2BW.h</label>
        <link refid="_t_lx493_d___w2_b_w_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pal.h</label>
        <link refid="pal_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/tlx493d.c</label>
        <link refid="tlx493d_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>tlx493d.h</label>
        <link refid="tlx493d_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tlx493d_common.h</label>
        <link refid="tlx493d__common_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tlx493d_common_defines.h</label>
        <link refid="tlx493d__common__defines_8h_source"/>
      </node>
      <node id="8">
        <label>tlx493d_types.h</label>
        <link refid="tlx493d__types_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="tlx493d_8c_1a4163f0874af2f5360558c6c3fce5b1e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_init</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_SupportedSensorType_t sensorType)</argsstring>
        <name>tlx493d_init</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_SupportedSensorType_t</type>
          <declname>sensorType</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_init</computeroutput> initializes a TLx493D sensor based on the specified sensor type. It is calling the initialization function of the corresponding sensor, depending on the sensor type that is passed to the function. </para>
        </briefdescription>
        <detaileddescription>
<para>Project C includes - common to all sensors </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the sensor being initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensorType</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensorType parameter is of type TLx493D_SupportedSensorType_t, which is an enumeration representing the supported sensor types for the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_init</computeroutput> returns a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="26" column="6" bodyfile="src/tlx493d.c" bodystart="26" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a8496fe017c7a42c475b17aadc6773144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_deinit</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_deinit</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_deinit</computeroutput> is used to deinitialize a TLx493D sensor. It frees all allocated memory which was allocated through the initialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the sensor being de-initialized.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_deinit</computeroutput> returns a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="54" column="6" bodyfile="src/tlx493d.c" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a97cc879b8a5a6bb3a878fd700ad25a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_readRegisters</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_readRegisters</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_readRegisters</computeroutput> reads registers from a TLx493D sensor. It is reading out the complete register map of the sensor and is saving the current values to the &quot;internal&quot; register map of the sensor object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_readRegisters</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="59" column="6" bodyfile="src/tlx493d.c" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1ad69aac2343d29d4355450fa1d3bef319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_getRawTemperature</definition>
        <argsstring>(TLx493D_t *sensor, int16_t *temperature)</argsstring>
        <name>tlx493d_getRawTemperature</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getRawTemperature</computeroutput> retrieves the raw temperature from a TLx493D sensor. It is reading out the temperature registers of the sensor and is returning its value as LSB. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int16_t variable where the raw temperature value will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getRawTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="64" column="6" bodyfile="src/tlx493d.c" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1ad5277b68c058856b116aa9ca6d602566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_getRawMagneticField</definition>
        <argsstring>(TLx493D_t *sensor, int16_t *x, int16_t *y, int16_t *z)</argsstring>
        <name>tlx493d_getRawMagneticField</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getRawMagneticField</computeroutput> retrieves the raw magnetic field values from a TLx493D sensor. It is reading the magnetic field value registers of the sensor and is returning them as LSB for the X, Y, Z-direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure that represents the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the z-axis will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getRawMagneticField</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="69" column="6" bodyfile="src/tlx493d.c" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a4e571c511f5baa9eac086a86a5a9cfa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_getRawMagneticFieldAndTemperature</definition>
        <argsstring>(TLx493D_t *sensor, int16_t *x, int16_t *y, int16_t *z, int16_t *temperature)</argsstring>
        <name>tlx493d_getRawMagneticFieldAndTemperature</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getRawMagneticFieldAndTemperature</computeroutput> retrieves the raw magnetic field and temperature values from a TLx493D sensor. It is reading out the magnetic field value registers, as well as the temperature value registers of the sensor and is returning them as LSB. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure that represents the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw magnetic field value along the z-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the raw temperature value will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getRawMagneticFieldAndTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="74" column="6" bodyfile="src/tlx493d.c" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a41026f7b3d45cccf65c7aaff1785458d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_getTemperature</definition>
        <argsstring>(TLx493D_t *sensor, double *temperature)</argsstring>
        <name>tlx493d_getTemperature</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getTemperature</computeroutput> retrieves the temperature from a TLx493D sensor in °C. It is reading out the temperature registers of the sensor and converts the values into °C with the formula that is provided in the datasheet of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a double variable where the temperature value will be stored in °C.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="79" column="6" bodyfile="src/tlx493d.c" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a042f63ba2b82b0359e74b188469c5fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_getMagneticField</definition>
        <argsstring>(TLx493D_t *sensor, double *x, double *y, double *z)</argsstring>
        <name>tlx493d_getMagneticField</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getMagneticField</computeroutput> retrieves the magnetic field values from a TLx493D sensor. It is reading out the magnetic field value registers of the sensor and is converting the retrieved data into values in mT for each magnetic field axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the z-axis will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getMagneticField</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="84" column="6" bodyfile="src/tlx493d.c" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a728866ad32b470544dce84c9a6756593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_getMagneticFieldAndTemperature</definition>
        <argsstring>(TLx493D_t *sensor, double *x, double *y, double *z, double *temperature)</argsstring>
        <name>tlx493d_getMagneticFieldAndTemperature</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getMagneticFieldAndTemperature</computeroutput> retrieves the magnetic field and temperature readings from a TLx493D sensor. It combines the two functions <computeroutput>tlx493d_getTemperature</computeroutput> and <computeroutput>tlx493d_getMagneticField</computeroutput> in order to have one function which is providing the temperature as well as the magnetic field values of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure that represents the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the magnetic field value in mT along the z-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a double variable where the temperature value in °C will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getMagneticFieldAndTemperature</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="89" column="6" bodyfile="src/tlx493d.c" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1ad73411923f26ba9915cda4e324ea54a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setMeasurement</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_MeasurementType_t meas)</argsstring>
        <name>tlx493d_setMeasurement</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_MeasurementType_t</type>
          <declname>meas</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setMeasurement</computeroutput> sets the measurement type for a TLx493D sensor. It is writing to the corresponding bitfields in the config-register in order to set the desired measuring mode of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>meas</computeroutput> parameter is of type <computeroutput>TLx493D_MeasurementType_t</computeroutput>, which is an enumeration type representing different measurement types for the TLx493D sensor. All available options can be found in the enum <computeroutput>TLx493D_MeasurementType_t</computeroutput> in the library file <computeroutput><ref refid="tlx493d__types_8h_source" kindref="compound">tlx493d_types.h</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setMeasurement</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="94" column="6" bodyfile="src/tlx493d.c" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a3604a130b5841cba995581b8f4146868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setTrigger</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_TriggerType_t trigger)</argsstring>
        <name>tlx493d_setTrigger</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_TriggerType_t</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setTrigger</computeroutput> sets the trigger type for a TLx493D sensor. It is writing to the corresponding bitfields in the config-register in order to set the desired trigger mode of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>trigger</computeroutput> parameter is of type <computeroutput>TLx493D_TriggerType_t</computeroutput>, which is an enumeration type representing different trigger types for the TLx493D sensor. All the available options can be found in the enum <computeroutput>TLx493D_TriggerType_t</computeroutput> in the library file <computeroutput>tlx493d_types</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setTrigger</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="99" column="6" bodyfile="src/tlx493d.c" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a28123bcbfe51f99d4012d8d8a3140fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setSensitivity</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_SensitivityType_t range)</argsstring>
        <name>tlx493d_setSensitivity</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_SensitivityType_t</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setSensitivity</computeroutput> sets the sensitivity of a TLx493D sensor. It is writing to the corresponding bitfields in the registers of the sensor in order to set the desired measuring range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">range</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>range</computeroutput> parameter is of type <computeroutput>TLx493D_SensitivityType_t, which is an enumeration type that represents the sensitivity range of the sensor. All available options can be found in the enum </computeroutput>TLx493D_SensitivityType_t<computeroutput>in the library file</computeroutput>tlx493d_types`.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setSensitivity</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="104" column="6" bodyfile="src/tlx493d.c" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1acf2217a810b5d13ddb7e7122e9b63db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setDefaultConfig</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_setDefaultConfig</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setDefaultConfig</computeroutput> sets the default configuration for a TLx493D sensor. It puts the sensor into the 1-Byte-Read-Mode and turns off the interrupt. This is required to guarantee the proper functionality of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setDefaultConfig</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="109" column="6" bodyfile="src/tlx493d.c" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1ab153e121de93c404cb9f52f54b76299a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setIICAddress</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_IICAddressType_t addr)</argsstring>
        <name>tlx493d_setIICAddress</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_IICAddressType_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setIICAddress</computeroutput> sets the IIC address of a TLx493D sensor. It is writing to the corresponding bitfields of the sensor in order to change the I2C-Default-Address of the sensor to the desired address of the user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>addr</computeroutput> parameter is of type <computeroutput>TLx493D_IICAddressType_t</computeroutput> , which is an enumeration type representing the I2C address of the sensor. You can see all available addresses in the enum <computeroutput>TLx493D_IICAddressType_t</computeroutput> in the library file <computeroutput><ref refid="tlx493d__types_8h_source" kindref="compound">tlx493d_types.h</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setIICAddress</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="114" column="6" bodyfile="src/tlx493d.c" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a933393ea072cf69e779393ee7170b480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_enableCollisionAvoidance</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_enableCollisionAvoidance</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_enableCollisionAvoidance</computeroutput> enables collision avoidance for a TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_enableCollisionAvoidance</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="119" column="6" bodyfile="src/tlx493d.c" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1adeb1bb9d98d1803622184e66ca3b565c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_disableCollisionAvoidance</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_disableCollisionAvoidance</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_disableCollisionAvoidance</computeroutput> disables collision avoidance for a TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_disableCollisionAvoidance</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="124" column="6" bodyfile="src/tlx493d.c" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a3f64da23dd7d6ec708f87388426e40f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_enableInterrupt</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_enableInterrupt</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_enableInterrupt</computeroutput> enables interrupts for a TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_enableInterrupt</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="129" column="6" bodyfile="src/tlx493d.c" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a0c85d9a616f8ac945c7c8bc32189c138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_disableInterrupt</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_disableInterrupt</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_disableInterrupt</computeroutput> is used to disable interrupts for a TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_disableInterrupt</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="134" column="6" bodyfile="src/tlx493d.c" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a2bd946d6dc97b2f5a9ab3bb57a4516a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setPowerMode</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_PowerModeType_t mode)</argsstring>
        <name>tlx493d_setPowerMode</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_PowerModeType_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setPowerMode</computeroutput> sets the power mode of a TLx493D sensor. It is writing to the corresponding bitfields of the sensor in order to set one of the three available power modes of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>mode</computeroutput> parameter is of type <computeroutput>TLx493D_PowerModeType_t</computeroutput>, which is an enumeration type representing different power modes for the TLx493D sensor. All available options can be found in the enum <computeroutput>TLx493D_PowerModeType_t</computeroutput> in the library file <computeroutput><ref refid="tlx493d__types_8h_source" kindref="compound">tlx493d_types.h</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setPowerMode</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="139" column="6" bodyfile="src/tlx493d.c" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1acca3d79ba1e790a6d12663255c620114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setUpdateRate</definition>
        <argsstring>(TLx493D_t *sensor, TLx493D_UpdateRateType_t rate)</argsstring>
        <name>tlx493d_setUpdateRate</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>TLx493D_UpdateRateType_t</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setUpdateRate</computeroutput> sets the update rate of a TLx493D sensor. It is writing to the corresponding bitfields of the sensor in order to set the desired update frequency, with which the sensor will update his measured values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>rate</computeroutput> parameter is of type <computeroutput>TLx493D_UpdateRateType_t</computeroutput>, which is an enumeration type representing different update rates for the sensor. All available options can be found in the enum <computeroutput>TLx493D_UpdateRateType_t</computeroutput> in the library file ´tlx493d_types.h`.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setUpdateRate</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="144" column="6" bodyfile="src/tlx493d.c" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a4a87a4ca9ea064116635f3b434567c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_hasValidData</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_hasValidData</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_hasValidData</computeroutput> checks if the TLx493D sensor has valid data. It is checking the corresponding bitfield of the sensor which indicates if the acquired measurement data is valid or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_hasValidData</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="149" column="6" bodyfile="src/tlx493d.c" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a577271b6ab5f5e931c633e3264effc80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_isFunctional</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_isFunctional</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_isFunctional</computeroutput> checks if a TLx493D sensor is functional. It checks the internal fuse parity bit as well as the config parity bit in order to confirm that the sensor is still functional. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents a TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_isFunctional</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="154" column="6" bodyfile="src/tlx493d.c" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1abfecc0b73406b643ebeb8076722622ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_hasWakeUp</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_hasWakeUp</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_hasWakeUp</computeroutput> checks if a TLx493D sensor has wake-up functionality. It simply checks the bitfield which indicates if the sensor has a wake-up functionality or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents a TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_hasWakeUp</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="159" column="6" bodyfile="src/tlx493d.c" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1aefcb1e788e683a57fdb93fefcb5a0a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_isWakeUpEnabled</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_isWakeUpEnabled</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_isWakeUpEnabled</computeroutput> checks if wake-up mode is enabled for a TLx493D sensor. It checks the bitfield of the sensor which gives you the information if the wake-up is enabled or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>sensor is a pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents a sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_isWakeUpEnabled</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="164" column="6" bodyfile="src/tlx493d.c" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a05fde2e524e74924104ab977e0a33366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_enableWakeUpMode</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_enableWakeUpMode</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_enableWakeUpMode</computeroutput> enables the wake-up mode for the TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_enableWakeUpMode</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="169" column="6" bodyfile="src/tlx493d.c" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1add6708056f74004120f76a141213373d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_disableWakeUpMode</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_disableWakeUpMode</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_disableWakeUpMode</computeroutput> disables the wake-up mode of a TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> struct, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_disableWakeUpMode</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="174" column="6" bodyfile="src/tlx493d.c" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a3b77ba2fe8fb0aaca85419da8a4013c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setWakeUpThresholdsAsInteger</definition>
        <argsstring>(TLx493D_t *sensor, int16_t xl_th, int16_t xh_th, int16_t yl_th, int16_t yh_th, int16_t zl_th, int16_t zh_th)</argsstring>
        <name>tlx493d_setWakeUpThresholdsAsInteger</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>xl_th</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>xh_th</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>yl_th</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>yh_th</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>zl_th</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>zh_th</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setWakeUpThresholdsAsInteger</computeroutput> sets the wake-up thresholds for a TLx493D sensor using integer values. It sets the lower and upper threshold for each of three axis. If one of these thresholds is exceeded the sensor will trigger an interrupt. It will continue to trigger interrupts as long as the threshold is exceeded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zl_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zh_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in z-axis.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setWakeUpThresholdsAsInteger</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="179" column="6" bodyfile="src/tlx493d.c" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a6c973b39024306ba8c737a1985fbb48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_setWakeUpThresholds</definition>
        <argsstring>(TLx493D_t *sensor, double temperature, double xLow, double xHigh, double yLow, double yHigh, double zLow, double zHigh)</argsstring>
        <name>tlx493d_setWakeUpThresholds</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xLow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xHigh</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yLow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yHigh</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zLow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zHigh</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_setWakeUpThresholds</computeroutput> sets the wake-up thresholds for the TLx493D sensor in mT. It sets the lower and upper threshold for each of three axis in mT. If one of these thresholds is exceeded the sensor will trigger an interrupt. It will continue to trigger interrupts as long as the threshold is exceeded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the sensor device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>The temperature to be used for derating the field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xLow</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xHigh</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yLow</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yHigh</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zLow</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower threshold value for the magnetic field in z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zHigh</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold value for the magnetic field in z-axis.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_setWakeUpThresholds</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="184" column="6" bodyfile="src/tlx493d.c" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1afa4045a614943f3d7603a25022a5410d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tlx493d_softwareReset</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_softwareReset</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_softwareReset</computeroutput> performs a software reset on the TLx493D sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the sensor device.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_softwareReset</computeroutput> is returning a boolean value. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Error.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Function execution was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="190" column="6" bodyfile="src/tlx493d.c" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a905ea02b5a16f26a1608515af83d1950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tlx493d_getTypeAsString</definition>
        <argsstring>(const TLx493D_t *sensor)</argsstring>
        <name>tlx493d_getTypeAsString</name>
        <param>
          <type>const <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_getTypeAsString</computeroutput> returns the type of the TLx493D sensor as a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the TLx493D sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function <computeroutput>tlx493d_getTypeAsString</computeroutput> returns a pointer to a constant character string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="195" column="12" bodyfile="src/tlx493d.c" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a26610728f9636920d70e062f7d3f013d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tlx493d_calculateRawMagneticFieldAtTemperature</definition>
        <argsstring>(TLx493D_t *sensor, int16_t rawTemp, TLx493D_SensitivityType_t sens, double xInmT, double yInmT, double zInmT, int16_t *x, int16_t *y, int16_t *z)</argsstring>
        <name>tlx493d_calculateRawMagneticFieldAtTemperature</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>rawTemp</declname>
        </param>
        <param>
          <type>TLx493D_SensitivityType_t</type>
          <declname>sens</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xInmT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yInmT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zInmT</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_calculateRawMagneticFieldAtTemperature</computeroutput> calculates the raw magnetic field at a given temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rawTemp</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw temperature value obtained from the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sens</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>sens</computeroutput> is of type <computeroutput>TLx493D_SensitivityType_t</computeroutput>, which is an enumeration type representing the sensitivity level of the sensor. It is used to specify the desired sensitivity level for calculating the raw magnetic field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xInmT</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>xInmT</computeroutput> represents the magnetic field strength in Millitesla (mT) along the x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yInmT</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>yInmT</computeroutput> represents the magnetic field strength in Millitesla (mT) along the y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zInmT</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter <computeroutput>zInmT</computeroutput> represents the magnetic field strength in Millitesla (mT) along the z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the calculated raw magnetic field in the x-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the calculated raw magnetic field in the y-axis will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">z</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable where the calculated raw magnetic field in the z-axis will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="200" column="6" bodyfile="src/tlx493d.c" bodystart="200" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="tlx493d_8c_1a2d0ebdf158d17775c3973bdde0ed5f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tlx493d_printRegisters</definition>
        <argsstring>(TLx493D_t *sensor)</argsstring>
        <name>tlx493d_printRegisters</name>
        <param>
          <type><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput>tlx493d_printRegisters</computeroutput> prints out the internal registers of the sensor object. It can be used to check certain values of the sensor register map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref> structure, which represents the TLx493D sensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlx493d.c" line="207" column="6" bodyfile="src/tlx493d.c" bodystart="207" bodyend="209"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>std<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>project<sp/>c<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tlx493d.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>common<sp/>to<sp/>all<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tlx493d_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tlx493d_common_defines.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tlx493d_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sensor<sp/>specific<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLx493D_A1B6.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLx493D_A2B6.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLx493D_P2B6.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLx493D_W2B6.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_t_lx493_d___w2_b_w_8h" kindref="compound">TLx493D_W2BW.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLx493D_P3B6.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLx493D_P3I8.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functions<sp/>common<sp/>to<sp/>all<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_init(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_SupportedSensorType_t<sp/>sensorType)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(sensorType)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_A1B6_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_A1B6_init(sensor);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_A2B6_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_A2B6_init(sensor);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_P2B6_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_P2B6_init(sensor);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_W2B6_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_W2B6_init(sensor);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_W2BW_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_W2BW_init(sensor);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_P3B6_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_P3B6_init(sensor);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TLx493D_P3I8_e<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLx493D_P3I8_init(sensor);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_deinit(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;deinit(sensor);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_readRegisters(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;readRegisters(sensor);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_getRawTemperature(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>int16_t<sp/>*temperature)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;getRawTemperature(sensor,<sp/>temperature);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_getRawMagneticField(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>int16_t<sp/>*x,<sp/>int16_t<sp/>*y,<sp/>int16_t<sp/>*z)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;getRawMagneticField(sensor,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_getRawMagneticFieldAndTemperature(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>int16_t<sp/>*x,<sp/>int16_t<sp/>*y,<sp/>int16_t<sp/>*z,<sp/>int16_t<sp/>*temperature)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;getRawMagneticFieldAndTemperature(sensor,<sp/>x,<sp/>y,<sp/>z,<sp/>temperature);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_getTemperature(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*temperature)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;getTemperature(sensor,<sp/>temperature);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_getMagneticField(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*z<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;getMagneticField(sensor,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_getMagneticFieldAndTemperature(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*temperature)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;getMagneticFieldAndTemperature(sensor,<sp/>x,<sp/>y,<sp/>z,<sp/>temperature);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setMeasurement(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_MeasurementType_t<sp/>meas)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;<ref refid="struct_t_lx493_d___common_functions__t_1a96d58d2e53d2450b738ecce27d4d602c" kindref="member">setMeasurement</ref>(sensor,<sp/>meas);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setTrigger(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_TriggerType_t<sp/>trigger)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setTrigger(sensor,<sp/>trigger);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setSensitivity(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_SensitivityType_t<sp/>range)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setSensitivity(sensor,<sp/>range);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setDefaultConfig(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;<ref refid="struct_t_lx493_d___common_functions__t_1abbd2006de41f58542779a727a10be3a7" kindref="member">setDefaultConfig</ref>(sensor);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setIICAddress(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_IICAddressType_t<sp/>addr)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setIICAddress(sensor,<sp/>addr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_enableCollisionAvoidance(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;enableCollisionAvoidance(sensor);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_disableCollisionAvoidance(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;disableCollisionAvoidance(sensor);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_enableInterrupt(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;enableInterrupt(sensor);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_disableInterrupt(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;disableInterrupt(sensor);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setPowerMode(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_PowerModeType_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setPowerMode(sensor,<sp/>mode);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setUpdateRate(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>TLx493D_UpdateRateType_t<sp/>rate)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setUpdateRate(sensor,<sp/>rate);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_hasValidData(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;<ref refid="struct_t_lx493_d___common_functions__t_1a080b12aaef950ab0a0ce681537895749" kindref="member">hasValidData</ref>(sensor);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_isFunctional(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;isFunctional(sensor);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_hasWakeUp(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;<ref refid="struct_t_lx493_d___common_functions__t_1ab0924bd6f166d01a2c6922d9423e0947" kindref="member">hasWakeUp</ref>(sensor);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_isWakeUpEnabled(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;isWakeUpEnabled(sensor);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_enableWakeUpMode(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;enableWakeUpMode(sensor);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_disableWakeUpMode(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;disableWakeUpMode(sensor);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setWakeUpThresholdsAsInteger(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>int16_t<sp/>xl_th,<sp/>int16_t<sp/>xh_th,<sp/>int16_t<sp/>yl_th,<sp/>int16_t<sp/>yh_th,<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>zl_th,<sp/>int16_t<sp/>zh_th)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setWakeUpThresholdsAsInteger(sensor,<sp/>xl_th,<sp/>xh_th,<sp/>yl_th,<sp/>yh_th,<sp/>zl_th,<sp/>zh_th);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_setWakeUpThresholds(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temperature,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xHigh,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yHigh,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zHigh)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;setWakeUpThresholds(sensor,<sp/>temperature,<sp/>xLow,<sp/>xHigh,<sp/>yLow,<sp/>yHigh,<sp/>zLow,<sp/>zHigh);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tlx493d_softwareReset(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;functions-&gt;softwareReset(sensor);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tlx493d_getTypeAsString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tlx493d_common_getTypeAsString(sensor);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tlx493d_calculateRawMagneticFieldAtTemperature(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor,<sp/>int16_t<sp/>rawTemp,<sp/>TLx493D_SensitivityType_t<sp/>sens,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xInmT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yInmT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zInmT,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*x,<sp/>int16_t<sp/>*y,<sp/>int16_t<sp/>*z)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>sensor-&gt;functions-&gt;calculateRawMagneticFieldAtTemperature(sensor,<sp/>rawTemp,<sp/>sens,<sp/>xInmT,<sp/>yInmT,<sp/>zInmT,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tlx493d_printRegisters(<ref refid="struct_t_lx493_d__t" kindref="compound">TLx493D_t</ref><sp/>*sensor)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>sensor-&gt;functions-&gt;printRegisters(sensor);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tlx493d.c"/>
  </compounddef>
</doxygen>
